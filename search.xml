<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NTP校时</title>
      <link href="/2024/07/18/NTP%E6%A0%A1%E6%97%B6/"/>
      <url>/2024/07/18/NTP%E6%A0%A1%E6%97%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>Windows设置同步网络时间：  <ul><li>家用电脑或者普通办公电脑设置定时同步网络时间，校正时间。  </li><li>Windows有Internet时间同步机制，默认与time.windows.com做时间校准，默认的周期是一周一次。  </li><li>这个周期对我来说有点略长， 想改为每小时一次，并且修改时间源。</li></ul></li></ul><h1 id="一、windows"><a href="#一、windows" class="headerlink" title="一、windows"></a>一、windows</h1><h2 id="NTP服务器"><a href="#NTP服务器" class="headerlink" title="NTP服务器"></a>NTP服务器</h2><ul><li><p>关闭防火墙<br><img src="https://cf.dreamf.fun/image/202407182356954.png" alt="image.png"></p></li><li><p>在桌面上右击“计算机”，选择“管理”，选择“服务”。</p></li></ul><p><img src="https://cf.dreamf.fun/image/202407182357320.png" alt="image.png"></p><ul><li>选中“Windows Time”，设置为开启，这样就可以将“Windows Time”这一个服务打开。</li></ul><p><img src="https://cf.dreamf.fun/image/202407182357794.png" alt="image.png"></p><ul><li><code>windows + R</code>唤出<code>运行</code>，输入regedit</li></ul><p><img src="https://cf.dreamf.fun/image/202407182359341.png" alt="image.png"></p><ul><li>在注册表中依次展开：HKEY_LOCAL_MACHINE、SYSTEM、CurrentControlSet、Services、W32Time、TimeProviders、NtpServer， 在NtpServer项的右侧键值ENablied，将默认的0改为1，1为启用NTP服务器。</li></ul><p><img src="https://cf.dreamf.fun/image/202407190000512.png" alt="image.png"></p><ul><li>再在注册表中依次展开：HKEY_LOCAL_MACHINE、SYSTEM、CurrentControlSet、Services、W32Time、Config  ，找到Config项右侧的AnnounceFlags。 把默认的10改为5，5的意思就是自身为可靠的时间源</li></ul><p><img src="https://cf.dreamf.fun/image/202407190001074.png" alt="image.png"></p><ul><li>在命令提示符中输入：net stop w32Time，回车等待NTP服务停止。然后再输入：net start w32Time，回车启动NTP服务。<br><img src="https://cf.dreamf.fun/image/202407190001676.png" alt="image.png"></li></ul><h2 id="NTP客户端"><a href="#NTP客户端" class="headerlink" title="NTP客户端"></a>NTP客户端</h2><ul><li><p>控制面部—时钟和区域—设置时间和日期-Internet时间<br><img src="https://cf.dreamf.fun/image/202407190011707.png" alt="image.png"></p></li><li><p>输入NTP校时服务器的IP地址或网址<br><img src="https://cf.dreamf.fun/image/202407190015768.png" alt="image.png"></p></li><li><p>Windows Time服务，启动类型改为“自动”<br><img src="https://cf.dreamf.fun/image/202407190012820.png" alt="image.png"></p></li><li><p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\TimeProviders\NtpClient，双击 SpecialPollInterval 键值，将对话框中的“基数栏”选择到“十进制”上，单位：秒，填写适当的同步时间间隔。</p></li></ul><p><img src="https://cf.dreamf.fun/image/202407190017559.png" alt="image.png"></p><ul><li>检查是否设置成功：在桌面右下角打开系统时间→更改时期和时间设置→Internet 时间，点击同步。</li></ul><p><img src="https://cf.dreamf.fun/image/202407190018307.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> NTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows自动登录</title>
      <link href="/2024/07/18/Windows%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/"/>
      <url>/2024/07/18/Windows%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>简介</p><ol><li><p>选择‘’开始“，然后选择”运行“</p></li><li><p>键入”regedit“，回车<br><img src="https://cf.dreamf.fun/image/202407190028785.png" alt="image.png"></p></li><li><p>依次展开注册表：计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon子项。<br><img src="https://cf.dreamf.fun/image/202407190036180.png" alt="image.png"></p></li><li><p>该子项下新建<code>AutoAdminLogon</code>，指向字符串值，值：1，确定</p></li><li><p>该子项下新建<code>DefaultPassword</code>，指向字符串值，键入密码，确定</p></li><li><p>如果已将计算机加入域，应添加<code>DefaultDomainName</code>,值的数据应设置为域的完全限定域名（FQDN），例如：<code>contoso.com</code></p></li><li><p>退出注册表，重启计算机，可实现自动登录。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql2000及SP4安装-win11</title>
      <link href="/2024/07/09/sql2000%E5%8F%8ASP4%E5%AE%89%E8%A3%85/"/>
      <url>/2024/07/09/sql2000%E5%8F%8ASP4%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>默认Win11上是不允许安装SQL2000的，毕竟SQL2000已经是10多年前的老软件了，但是因为它成熟稳定，相比SQL2005，SQL2008R2，SQL2012，SQL2014，体积要小的多，所以还是很希望能在Win10环境下使用它！</p><h1 id="一、SQL2000"><a href="#一、SQL2000" class="headerlink" title="一、SQL2000"></a>一、SQL2000</h1><h2 id="1-1-安装环境准备"><a href="#1-1-安装环境准备" class="headerlink" title="1.1 安装环境准备"></a>1.1 安装环境准备</h2><h3 id="1-1-1-SysWOW64文件夹权限修改"><a href="#1-1-1-SysWOW64文件夹权限修改" class="headerlink" title="1.1.1 SysWOW64文件夹权限修改"></a>1.1.1 SysWOW64文件夹权限修改</h3><ul><li>设置SysWOW64的权限：<code>C:\Windows\SysWOW64</code></li></ul><p><img src="https://cf.dreamf.fun/image/202407091924504.png" alt="image.png"></p><h3 id="1-1-2-SQLUNIRL-DLL替换"><a href="#1-1-2-SQLUNIRL-DLL替换" class="headerlink" title="1.1.2 SQLUNIRL.DLL替换"></a>1.1.2 SQLUNIRL.DLL替换</h3><ul><li>从SQL2000的安装包里复制SQLUNIRL.DLL，替换C:\Windows\SysWOW64\SQLUNIRL.DLL，</li><li>路径：<code>\sql2000\developer\x86\SYSTEM</code><br><img src="https://cf.dreamf.fun/image/202407091948147.png" alt="Snipaste_2024-07-09_19-47-49.png"></li></ul><p><img src="https://cf.dreamf.fun/image/202407091934309.png" alt="image.png"></p><h3 id="1-1-3-程序挂起解决"><a href="#1-1-3-程序挂起解决" class="headerlink" title="1.1.3 程序挂起解决"></a>1.1.3 程序挂起解决</h3><ul><li>注册表里的pending项删除</li><li>路径：<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager</code></li></ul><p><img src="https://cf.dreamf.fun/image/202407091934346.png" alt="image.png"></p><h2 id="1-2-SQL2000安装"><a href="#1-2-SQL2000安装" class="headerlink" title="1.2. SQL2000安装"></a>1.2. SQL2000安装</h2><h3 id="1-2-1-安装"><a href="#1-2-1-安装" class="headerlink" title="1.2.1 安装"></a>1.2.1 安装</h3><ul><li>本地账户安装</li><li>混合账号：密码</li><li>一直下一步…</li></ul><h3 id="1-2-2-运行"><a href="#1-2-2-运行" class="headerlink" title="1.2.2 运行"></a>1.2.2 运行</h3><ul><li><strong>以管理员方式运行</strong>: 否则服务管理器界面无内容</li></ul><p><img src="https://cf.dreamf.fun/image/202407091945991.png" alt="Snipaste_2024-07-09_19-44-29.png"></p>]]></content>
      
      
      <categories>
          
          <category> sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows媒体感知</title>
      <link href="/2024/07/08/windows%E5%AA%92%E4%BD%93%E6%84%9F%E7%9F%A5/"/>
      <url>/2024/07/08/windows%E5%AA%92%E4%BD%93%E6%84%9F%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="windows媒体感知"><a href="#windows媒体感知" class="headerlink" title="windows媒体感知"></a>windows媒体感知</h1><ul><li><p>简介</p><p>在使用 TCP&#x2F;IP 的基于 Windows 的计算机上，可以使用媒体感知功能来检测网络媒体是否处于链接状态。 以太网网络适配器和集线器通常具有指示连接状态的“链接”指示灯。 此状态与 Windows 解释为链接状态的条件相同。 每当 Windows 检测到“关闭”状态时，它会从该适配器中删除绑定协议，直到再次检测到它为“up”。 有时，你可能不希望网络适配器检测到此状态。 可以通过修改注册表来设置此配置。</p></li></ul><ol><li><p>启动注册表编辑器。</p></li><li><p>找到以下注册表子项： <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Tcpip\Parameters</code></p></li><li><p>将以下注册表项添加到 <strong>Parameters</strong> 子项：</p><p>名称：DisableDHCPMediaSense<br>数据类型：REG_DWORD (布尔)<br>值：1</p></li><li><p>重启计算机。</p></li></ol><p>#补充 DisableClusSvcMediaSense，当此项设置为 1 时，将禁用媒体感知。 当此项设置为0，则可以启用媒体感知</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口占用</title>
      <link href="/2024/07/04/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
      <url>/2024/07/04/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Windows"><a href="#一、Windows" class="headerlink" title="一、Windows"></a>一、Windows</h1><h2 id="1-1-端口占用的IP"><a href="#1-1-端口占用的IP" class="headerlink" title="1.1 端口占用的IP"></a>1.1 端口占用的IP</h2><ul><li>全部端口占用查询<ul><li><code>netstat -aon</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">C:\Users\jiuji&gt;netstat -aon</span><br><span class="line">活动连接</span><br><span class="line">  协议  本地地址          外部地址        状态           PID</span><br><span class="line">  TCP    0.0.0.0:135      0.0.0.0:0     LISTENING      1772</span><br><span class="line">  TCP    0.0.0.0:445      0.0.0.0:0     LISTENING      4</span><br><span class="line">  TCP    0.0.0.0:902      0.0.0.0:0     LISTENING      5160</span><br><span class="line">  TCP    0.0.0.0:912      0.0.0.0:0     LISTENING      5160</span><br><span class="line">  TCP    0.0.0.0:1028     0.0.0.0:0     LISTENING      1332</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure></li></ul></li><li>特定端口占用查询<ul><li><code>netstat -aon | findstr &quot;端口号&quot;</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\jiuji&gt;netstat -aon | findstr &quot;1772&quot;</span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0        LISTENING       1772</span><br><span class="line">  TCP    [::]:135               [::]:0           LISTENING       1772</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="2-2-端口占用的进程及程序名"><a href="#2-2-端口占用的进程及程序名" class="headerlink" title="2.2 端口占用的进程及程序名"></a>2.2 端口占用的进程及程序名</h2><ul><li>特定端口占用查询<ul><li><code>tasklist | findstr &quot;端口号&quot;</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\jiuji&gt;tasklist | findstr &quot;1772&quot;</span><br><span class="line">svchost.exe                   1772 Services         0     16,724 K</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="二、Linux"><a href="#二、Linux" class="headerlink" title="二、Linux"></a>二、Linux</h1><ul><li><code>lsof -i:端口号</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">lsof -i:8000</span></span><br><span class="line">COMMAND   PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME</span><br><span class="line">lwfs    22065 root    6u  IPv4 4395053      0t0  TCP *:irdmi (LISTEN)</span><br></pre></td></tr></table></figure></li><li><code>netstat -tunlp |grep 端口号</code><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tcp   0  0 0.0.0.0:8000      0.0.0.0:*           LISTEN      22065/lwfs</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 端口 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>payload提取boot</title>
      <link href="/2024/06/22/payload%E6%8F%90%E5%8F%96boot.img/"/>
      <url>/2024/06/22/payload%E6%8F%90%E5%8F%96boot.img/</url>
      
        <content type="html"><![CDATA[<p>1、下载 手机系统包：<a href="https://magiskcn.com/rom">rom</a>（一定要下载和手机系统版本一致的系统包）</p><p>2、解压 系统包（只需要payload.bin文件）</p><p>3、下载 <strong>payload-dumper-go</strong>：<a href="https://mrzzoxo.lanzoui.com/b02plgdpi">lanzoui.com&#x2F;b02plgdpi</a>（解压出来）</p><p>4、复制 <strong>payload.bin</strong> 文件到 <strong>payload-dumper-go</strong> 文件夹里面</p><p>5、打开CMD命令行</p><p>6、按照提示输入 b</p><p><img src="https://cdn.magiskcn.com/wp-content/uploads/2022/12/1bc49334127f327.jpg"><br>7.提取成功</p><p><img src="https://cdn.magiskcn.com/wp-content/uploads/2022/12/9f415bbcdc6445c.jpg"><br>8、打开 <strong>img</strong> 文件夹 就可以看到提取的 <strong>boot.img</strong> 了</p><p><img src="https://cdn.magiskcn.com/wp-content/uploads/2022/12/c3362e52caa3aab.jpg" alt="payload-dumper-go提取boot（payload提取boot.img）插图4" title="payload-dumper-go提取boot（payload提取boot.img）插图4"></p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> 刷机 </tag>
            
            <tag> boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aria2</title>
      <link href="/2024/06/21/aria2/"/>
      <url>/2024/06/21/aria2/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><p>aria2<br>  aria2是一款免费开源跨平台且不限速的多线程下载软件，其优点是速度快、体积小、资源占用少；支持 HTTP &#x2F; FTP &#x2F; BT &#x2F; Magnet 磁力链接等类型的文件下载；支持 Win、Mac、Linux 系统，甚至在树莓派、NAS、路由器等设备上都能安装它。强大的地方，结合第三方插件，可以扩展，下载百度网盘等资源，居家下片必备神器。</p></li><li><p>AriaNg<br>  AriaNg 是一个让 aria2 更容易使用的现代 Web 前端. AriaNg 使用纯 html &amp; javascript 开发, 所以其不需要任何编译器或运行环境. 您只要将 AriaNg 放在您的 Web 服务器里并在浏览器中打开即可使用. AriaNg 使用响应式布局, 支持各种计算机或移动设备.</p></li></ul><h1 id="aria2"><a href="#aria2" class="headerlink" title="aria2"></a>aria2</h1><h2 id="aria2下载"><a href="#aria2下载" class="headerlink" title="aria2下载"></a>aria2下载</h2><ul><li><a href="https://github.com/aria2/aria2/releases">aria2下载地址</a></li></ul><h2 id="aria2配置"><a href="#aria2配置" class="headerlink" title="aria2配置"></a>aria2配置</h2><ul><li><p>aria2c.conf文件创建</p><ul><li>文件保存路径：根据需要自行修改路径</li><li>session：根据需要自行修改路径</li><li>rpc<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">## &#x27;#&#x27;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</span><br><span class="line">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span><br><span class="line"></span><br><span class="line">## 文件保存相关 ##</span><br><span class="line"></span><br><span class="line"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span><br><span class="line">dir=E:\Google\</span><br><span class="line"># 启用磁盘缓存, <span class="number">0</span>为禁用缓存, 需<span class="number">1.16</span>以上版本, 默认:<span class="number">16</span>M</span><br><span class="line">#disk-cache=<span class="number">32</span>M</span><br><span class="line"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span><br><span class="line"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span><br><span class="line"># falloc和trunc则需要文件系统和内核支持</span><br><span class="line"># NTFS建议使用falloc, EXT3/<span class="number">4</span>建议trunc, MAC 下需要注释此项</span><br><span class="line">#file-allocation=none</span><br><span class="line"># 断点续传</span><br><span class="line">continue=true</span><br><span class="line"></span><br><span class="line">## 下载连接相关 ##</span><br><span class="line"></span><br><span class="line"># 最大同时下载任务数, 运行时可修改, 默认:<span class="number">5</span></span><br><span class="line">#max-concurrent-downloads=<span class="number">5</span></span><br><span class="line"># 同一服务器连接数, 添加时可指定, 默认:<span class="number">1</span></span><br><span class="line">max-connection-per-server=<span class="number">16</span></span><br><span class="line"># 最小文件分片大小, 添加时可指定, 取值范围<span class="number">1</span>M -<span class="number">1024</span>M, 默认:<span class="number">20</span>M</span><br><span class="line"># 假定size=<span class="number">10</span>M, 文件为<span class="number">20</span>MiB 则使用两个来源下载; 文件为<span class="number">15</span>MiB 则使用一个来源下载</span><br><span class="line">min-split-size=<span class="number">10</span>M</span><br><span class="line"># 单个任务最大线程数, 添加时可指定, 默认:<span class="number">5</span></span><br><span class="line">#split=<span class="number">5</span></span><br><span class="line"># 整体下载速度限制, 运行时可修改, 默认:<span class="number">0</span></span><br><span class="line">#max-overall-download-limit=<span class="number">0</span></span><br><span class="line"># 单个任务下载速度限制, 默认:<span class="number">0</span></span><br><span class="line">#max-download-limit=<span class="number">0</span></span><br><span class="line"># 整体上传速度限制, 运行时可修改, 默认:<span class="number">0</span></span><br><span class="line">#max-overall-upload-limit=<span class="number">0</span></span><br><span class="line"># 单个任务上传速度限制, 默认:<span class="number">0</span></span><br><span class="line">#max-upload-limit=<span class="number">0</span></span><br><span class="line"># 禁用IPv6, 默认:false</span><br><span class="line">#disable-ipv6=true</span><br><span class="line"># 连接超时时间, 默认:<span class="number">60</span></span><br><span class="line">#timeout=<span class="number">60</span></span><br><span class="line"># 最大重试次数, 设置为<span class="number">0</span>表示不限制重试次数, 默认:<span class="number">5</span></span><br><span class="line">#max-tries=<span class="number">5</span></span><br><span class="line"># 设置重试等待的秒数, 默认:<span class="number">0</span></span><br><span class="line">#retry-wait=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">## 进度保存相关 ##</span><br><span class="line"></span><br><span class="line"># 从会话文件中读取下载任务</span><br><span class="line">input-file=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\aria2.session</span><br><span class="line"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span><br><span class="line">save-session=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\aria2.session</span><br><span class="line"># 定时保存会话, <span class="number">0</span>为退出时才保存, 需<span class="number">1.16</span>.<span class="number">1</span>以上版本, 默认:<span class="number">0</span></span><br><span class="line">#save-session-interval=<span class="number">60</span></span><br><span class="line"></span><br><span class="line">## RPC相关设置 ##</span><br><span class="line"></span><br><span class="line"># 启用RPC, 默认:false</span><br><span class="line">enable-rpc=true</span><br><span class="line"># 允许所有来源, 默认:false</span><br><span class="line">rpc-allow-origin-all=true</span><br><span class="line"># 允许非外部访问, 默认:false</span><br><span class="line">rpc-listen-all=true</span><br><span class="line"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span><br><span class="line">#event-poll=select</span><br><span class="line"># RPC监听端口, 端口被占用时可以修改, 默认:<span class="number">6800</span></span><br><span class="line">#rpc-listen-port=<span class="number">6800</span></span><br><span class="line"># 设置的RPC授权令牌, v1.<span class="number">18.4</span>新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span><br><span class="line">#rpc-secret=&lt;TOKEN&gt;</span><br><span class="line"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class="line">#rpc-user=&lt;USER&gt;</span><br><span class="line"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span><br><span class="line">#rpc-passwd=&lt;PASSWD&gt;</span><br><span class="line"># 是否启用 RPC 服务的 SSL/TLS 加密,</span><br><span class="line"># 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接</span><br><span class="line">#rpc-secure=true</span><br><span class="line"># 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,</span><br><span class="line"># 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥</span><br><span class="line">#rpc-certificate=/path/to/certificate.pem</span><br><span class="line"># 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件</span><br><span class="line">#rpc-private-key=/path/to/certificate.key</span><br><span class="line"></span><br><span class="line">## BT/PT下载相关 ##</span><br><span class="line"></span><br><span class="line"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span><br><span class="line">#follow-torrent=true</span><br><span class="line"># BT监听端口, 当端口被屏蔽时使用, 默认:<span class="number">6881</span>-<span class="number">6999</span></span><br><span class="line">listen-port=<span class="number">51413</span></span><br><span class="line"># 单个种子最大连接数, 默认:<span class="number">55</span></span><br><span class="line">#bt-max-peers=<span class="number">55</span></span><br><span class="line"># 打开DHT功能, PT需要禁用, 默认:true</span><br><span class="line">enable-dht=false</span><br><span class="line"># 打开IPv6 DHT功能, PT需要禁用</span><br><span class="line">#enable-dht6=false</span><br><span class="line"># DHT网络监听端口, 默认:<span class="number">6881</span>-<span class="number">6999</span></span><br><span class="line">#dht-listen-port=<span class="number">6881</span>-<span class="number">6999</span></span><br><span class="line"># 本地节点查找, PT需要禁用, 默认:false</span><br><span class="line">#bt-enable-lpd=false</span><br><span class="line"># 种子交换, PT需要禁用, 默认:true</span><br><span class="line">enable-peer-exchange=false</span><br><span class="line"># 每个种子限速, 对少种的PT很有用, 默认:<span class="number">50</span>K</span><br><span class="line">#bt-request-peer-speed-limit=<span class="number">50</span>K</span><br><span class="line"># 客户端伪装, PT需要</span><br><span class="line">peer-id-prefix=-TR2770-</span><br><span class="line">user-agent=Transmission/<span class="number">2.77</span></span><br><span class="line">peer-agent=Transmission/<span class="number">2.77</span></span><br><span class="line"># 当种子的分享率达到这个数时, 自动停止做种, <span class="number">0</span>为一直做种, 默认:<span class="number">1.0</span></span><br><span class="line">seed-ratio=<span class="number">0</span></span><br><span class="line"># 强制保存会话, 即使任务已经完成, 默认:false</span><br><span class="line"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span><br><span class="line">#force-save=false</span><br><span class="line"># BT校验相关, 默认:true</span><br><span class="line">#bt-hash-check-seed=true</span><br><span class="line"># 继续之前的BT任务时, 无需再次校验, 默认:false</span><br><span class="line">bt-seed-unverified=true</span><br><span class="line"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span><br><span class="line">bt-save-metadata=true</span><br></pre></td></tr></table></figure></li></ul></li><li><p>创建 aria2.session 文件</p></li><li><p><code>aria2.session</code>文件用于保存下载会话的信息。<br>在解压后的目录中新增<code>aria2.session</code>文件，创建一个<code>aria2.session</code>的空文件即可</p></li></ul><h1 id="AriaNg"><a href="#AriaNg" class="headerlink" title="AriaNg"></a>AriaNg</h1><h2 id="AriaNg下载"><a href="#AriaNg下载" class="headerlink" title="AriaNg下载"></a>AriaNg下载</h2><ul><li><a href="https://github.com/mayswind/AriaNg/releases">AriaNg下载地址</a></li><li>下载最新发布版本的<code>AriaNg-x.x.x-AllInOne.zip</code>,解压后运行文件夹中的<code>index.html</code>。</li><li>浏览器保存打开的网页，避免每次都要运行<code>index.html</code>。</li></ul><h2 id="AriaNg配置"><a href="#AriaNg配置" class="headerlink" title="AriaNg配置"></a>AriaNg配置</h2><ul><li>① AriaNg设置</li><li>② RPC</li><li>③ 填写IP地址，如果是本机就填写本机的IP地址，如127.0.0.1或者localhost。如果是远程地址就填写对的IP地址。</li><li>④ 如果Aria2设置的有秘钥，就填写秘钥。秘钥配置在aria2.conf配置文件中的<code>rpc-secret=&lt;TOKEN&gt;</code>参数。如果没有就不填写</li></ul><p>#补充 如使用下面的配置文件，需填写秘钥<br><img src="https://cf.dreamf.fun/image/202406211947399.png" alt="image.png"></p><h2 id="AriaNg使用"><a href="#AriaNg使用" class="headerlink" title="AriaNg使用"></a>AriaNg使用</h2><ul><li>使用AriaNg Web UI前需要先运行Aria2，确保Aria2状态为已连接<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Aria2运行命令</span><br><span class="line"># 注意命令行先进入aria2c<span class="selector-class">.exe</span>文件夹下面，否则会出现找不到aria2<span class="selector-class">.conf</span>的情况</span><br><span class="line"></span><br><span class="line">.\aria2c<span class="selector-class">.exe</span> <span class="attr">--conf-path</span>=aria2<span class="selector-class">.conf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h1><ul><li>创建aria2.vbs文件</li><li>内容如下<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">Set ws = CreateObject(&quot;Wscript<span class="selector-class">.Shell</span>&quot;) </span><br><span class="line">ws<span class="selector-class">.run</span> &quot;D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>.\aria2c.exe --conf-path=aria2.conf<span class="string">&quot;,vbhide</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></li></ul><h1 id="另一个aria2-conf配置文件"><a href="#另一个aria2-conf配置文件" class="headerlink" title="另一个aria2.conf配置文件"></a>另一个aria2.conf配置文件</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line"># https://github.com/P3TERX/aria2.conf</span><br><span class="line"># File name：aria2.conf</span><br><span class="line"># Description: Awesome Aria2 configuration file</span><br><span class="line"># Version: <span class="number">2021.09</span>.<span class="number">15</span></span><br><span class="line">#</span><br><span class="line"># Copyright (c) <span class="number">2018</span>-<span class="number">2021</span> P3TERX &lt;https://p3terx.com&gt;</span><br><span class="line">#</span><br><span class="line"># This is free software, licensed under the MIT License.</span><br><span class="line"># See /LICENSE for more information.</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">## 文件保存设置 ##</span><br><span class="line"></span><br><span class="line"># 下载目录。可使用绝对路径或相对路径, 默认: 当前启动位置</span><br><span class="line">dir=E:\Google\</span><br><span class="line"></span><br><span class="line"># 磁盘缓存, <span class="number">0</span> 为禁用缓存，默认:<span class="number">16</span>M</span><br><span class="line"># 磁盘缓存的作用是把下载的数据块临时存储在内存中，然后集中写入硬盘，以减少磁盘 I/O ，提升读写性能，延长硬盘寿命。</span><br><span class="line"># 建议在有足够的内存空闲情况下适当增加，但不要超过剩余可用内存空间大小。</span><br><span class="line"># 此项值仅决定上限，实际对内存的占用取决于网速(带宽)和设备性能等其它因素。</span><br><span class="line">disk-cache=<span class="number">64</span>M</span><br><span class="line"></span><br><span class="line"># 文件预分配方式, 可选：none, prealloc, trunc, falloc, 默认:prealloc</span><br><span class="line"># 预分配对于机械硬盘可有效降低磁盘碎片、提升磁盘读写性能、延长磁盘寿命。</span><br><span class="line"># 机械硬盘使用 ext4（具有扩展支持），btrfs，xfs 或 NTFS（仅 MinGW 编译版本）等文件系统建议设置为 falloc</span><br><span class="line"># 若无法下载，提示 fallocate failed.cause：Operation not supported 则说明不支持，请设置为 none</span><br><span class="line"># prealloc 分配速度慢, trunc 无实际作用，不推荐使用。</span><br><span class="line"># 固态硬盘不需要预分配，只建议设置为 none ，否则可能会导致双倍文件大小的数据写入，从而影响寿命。</span><br><span class="line">file-allocation=none</span><br><span class="line"></span><br><span class="line"># 文件预分配大小限制。小于此选项值大小的文件不预分配空间，单位 K 或 M，默认：<span class="number">5</span>M</span><br><span class="line">no-file-allocation-limit=<span class="number">64</span>M</span><br><span class="line"></span><br><span class="line"># 断点续传</span><br><span class="line">continue=true</span><br><span class="line"></span><br><span class="line"># 始终尝试断点续传，无法断点续传则终止下载，默认：true</span><br><span class="line">always-resume=false</span><br><span class="line"></span><br><span class="line"># 不支持断点续传的 URI 数值，当 always-resume=false 时生效。</span><br><span class="line"># 达到这个数值从将头开始下载，值为 <span class="number">0</span> 时所有 URI 不支持断点续传时才从头开始下载。</span><br><span class="line">max-resume-failure-tries=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 获取服务器文件时间，默认:false</span><br><span class="line">remote-time=true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 进度保存设置 ##</span><br><span class="line"></span><br><span class="line"># 从会话文件中读取下载任务</span><br><span class="line">input-file=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\aria2.session</span><br><span class="line"></span><br><span class="line"># 会话文件保存路径</span><br><span class="line"># Aria2 退出时或指定的时间间隔会保存`错误/未完成`的下载任务到会话文件</span><br><span class="line">save-session=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\aria2.session</span><br><span class="line"></span><br><span class="line"># 任务状态改变后保存会话的间隔时间（秒）, <span class="number">0</span> 为仅在进程正常退出时保存, 默认:<span class="number">0</span></span><br><span class="line"># 为了及时保存任务状态、防止任务丢失，此项值只建议设置为 <span class="number">1</span></span><br><span class="line">save-session-interval=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"># 自动保存任务进度到控制文件(*.aria2)的间隔时间（秒），<span class="number">0</span> 为仅在进程正常退出时保存，默认：<span class="number">60</span></span><br><span class="line"># 此项值也会间接影响从内存中把缓存的数据写入磁盘的频率</span><br><span class="line"># 想降低磁盘 IOPS (每秒读写次数)则提高间隔时间</span><br><span class="line"># 想在意外非正常退出时尽量保存更多的下载进度则降低间隔时间</span><br><span class="line"># 非正常退出：进程崩溃、系统崩溃、SIGKILL 信号、设备断电等</span><br><span class="line">auto-save-interval=<span class="number">20</span></span><br><span class="line"></span><br><span class="line"># 强制保存，即使任务已完成也保存信息到会话文件, 默认:false</span><br><span class="line"># 开启后会在任务完成后保留 .aria2 文件，文件被移除且任务存在的情况下重启后会重新下载。</span><br><span class="line"># 关闭后已完成的任务列表会在重启后清空。</span><br><span class="line">force-save=false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 下载连接设置 ##</span><br><span class="line"></span><br><span class="line"># 文件未找到重试次数，默认:<span class="number">0</span> (禁用)</span><br><span class="line"># 重试时同时会记录重试次数，所以也需要设置 max-tries 这个选项</span><br><span class="line">max-file-not-found=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"># 最大尝试次数，<span class="number">0</span> 表示无限，默认:<span class="number">5</span></span><br><span class="line">max-tries=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 重试等待时间（秒）, 默认:<span class="number">0</span> (禁用)</span><br><span class="line">retry-wait=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"># 连接超时时间（秒）。默认：<span class="number">60</span></span><br><span class="line">connect-timeout=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"># 超时时间（秒）。默认：<span class="number">60</span></span><br><span class="line">timeout=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"># 最大同时下载任务数, 运行时可修改, 默认:<span class="number">5</span></span><br><span class="line">max-concurrent-downloads=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"># 单服务器最大连接线程数, 任务添加时可指定, 默认:<span class="number">1</span></span><br><span class="line"># 最大值为 <span class="number">16</span> (增强版无限制), 且受限于单任务最大连接线程数(split)所设定的值。</span><br><span class="line">max-connection-per-server=<span class="number">16</span></span><br><span class="line"></span><br><span class="line"># 单任务最大连接线程数, 任务添加时可指定, 默认:<span class="number">5</span></span><br><span class="line">split=<span class="number">64</span></span><br><span class="line"></span><br><span class="line"># 文件最小分段大小, 添加时可指定, 取值范围 <span class="number">1</span>M-<span class="number">1024</span>M (增强版最小值为 <span class="number">1</span>K), 默认:<span class="number">20</span>M</span><br><span class="line"># 比如此项值为 <span class="number">10</span>M, 当文件为 <span class="number">20</span>MB 会分成两段并使用两个来源下载, 文件为 <span class="number">15</span>MB 则只使用一个来源下载。</span><br><span class="line"># 理论上值越小使用下载分段就越多，所能获得的实际线程数就越大，下载速度就越快，但受限于所下载文件服务器的策略。</span><br><span class="line">min-split-size=<span class="number">4</span>M</span><br><span class="line"></span><br><span class="line"># HTTP/FTP 下载分片大小，所有分割都必须是此项值的倍数，最小值为 <span class="number">1</span>M (增强版为 <span class="number">1</span>K)，默认：<span class="number">1</span>M</span><br><span class="line">piece-length=<span class="number">1</span>M</span><br><span class="line"></span><br><span class="line"># 允许分片大小变化。默认：false</span><br><span class="line"># false：当分片大小与控制文件中的不同时将会中止下载</span><br><span class="line"># true：丢失部分下载进度继续下载</span><br><span class="line">allow-piece-length-change=true</span><br><span class="line"></span><br><span class="line"># 最低下载速度限制。当下载速度低于或等于此选项的值时关闭连接（增强版本为重连），此选项与 BT 下载无关。单位 K 或 M ，默认：<span class="number">0</span> (无限制)</span><br><span class="line">lowest-speed-limit=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 全局最大下载速度限制, 运行时可修改, 默认：<span class="number">0</span> (无限制)</span><br><span class="line">max-overall-download-limit=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 单任务下载速度限制, 默认：<span class="number">0</span> (无限制)</span><br><span class="line">max-download-limit=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 禁用 IPv6, 默认:false</span><br><span class="line">disable-ipv6=true</span><br><span class="line"></span><br><span class="line"># GZip 支持，默认:false</span><br><span class="line">http-accept-gzip=true</span><br><span class="line"></span><br><span class="line"># URI 复用，默认: true</span><br><span class="line">reuse-uri=false</span><br><span class="line"></span><br><span class="line"># 禁用 netrc 支持，默认:false</span><br><span class="line">no-netrc=true</span><br><span class="line"></span><br><span class="line"># 允许覆盖，当相关控制文件(.aria2)不存在时从头开始重新下载。默认:false</span><br><span class="line">allow-overwrite=false</span><br><span class="line"></span><br><span class="line"># 文件自动重命名，此选项仅在 <span class="built_in">HTTP</span>(S)/FTP 下载中有效。新文件名在名称之后扩展名之前加上一个点和一个数字（<span class="number">1</span>..<span class="number">9999</span>）。默认:true</span><br><span class="line">auto-file-renaming=true</span><br><span class="line"></span><br><span class="line"># 使用 UTF-<span class="number">8</span> 处理 Content-Disposition ，默认:false</span><br><span class="line">content-disposition-default-utf8=true</span><br><span class="line"></span><br><span class="line"># 最低 TLS 版本，可选：TLSv1.<span class="number">1</span>、TLSv1.<span class="number">2</span>、TLSv1.<span class="number">3</span> 默认:TLSv1.<span class="number">2</span></span><br><span class="line">#min-tls-version=TLSv1.<span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## BT/PT 下载设置 ##</span><br><span class="line"></span><br><span class="line"># BT 监听端口(TCP), 默认:<span class="number">6881</span>-<span class="number">6999</span></span><br><span class="line"># 直通外网的设备，比如 VPS ，务必配置防火墙和安全组策略允许此端口入站</span><br><span class="line"># 内网环境的设备，比如 NAS ，除了防火墙设置，还需在路由器设置外网端口转发到此端口</span><br><span class="line">listen-port=<span class="number">51413</span></span><br><span class="line"></span><br><span class="line"># DHT 网络与 UDP tracker 监听端口(UDP), 默认:<span class="number">6881</span>-<span class="number">6999</span></span><br><span class="line"># 因协议不同，可以与 BT 监听端口使用相同的端口，方便配置防火墙和端口转发策略。</span><br><span class="line">dht-listen-port=<span class="number">51413</span></span><br><span class="line"></span><br><span class="line"># 启用 IPv4 DHT 功能, PT 下载(私有种子)会自动禁用, 默认:true</span><br><span class="line">enable-dht=true</span><br><span class="line"></span><br><span class="line"># 启用 IPv6 DHT 功能, PT 下载(私有种子)会自动禁用，默认:false</span><br><span class="line"># 在没有 IPv6 支持的环境开启可能会导致 DHT 功能异常</span><br><span class="line">enable-dht6=false</span><br><span class="line"></span><br><span class="line"># 指定 BT 和 DHT 网络中的 IP 地址</span><br><span class="line"># 使用场景：在家庭宽带没有公网 IP 的情况下可以把 BT 和 DHT 监听端口转发至具有公网 IP 的服务器，在此填写服务器的 IP ，可以提升 BT 下载速率。</span><br><span class="line">#bt-external-ip=</span><br><span class="line"></span><br><span class="line"># IPv4 DHT 文件路径，默认：$HOME/.aria2/dht.dat</span><br><span class="line">dht-file-path=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\dht.dat</span><br><span class="line"></span><br><span class="line"># IPv6 DHT 文件路径，默认：$HOME/.aria2/dht6.dat</span><br><span class="line">dht-file-path6=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\dht6.dat</span><br><span class="line"></span><br><span class="line"># IPv4 DHT 网络引导节点</span><br><span class="line">dht-entry-point=dht.transmissionbt.com:<span class="number">6881</span></span><br><span class="line"></span><br><span class="line"># IPv6 DHT 网络引导节点</span><br><span class="line">dht-entry-point6=dht.transmissionbt.com:<span class="number">6881</span></span><br><span class="line"></span><br><span class="line"># 本地节点发现, PT 下载(私有种子)会自动禁用 默认:false</span><br><span class="line">bt-enable-lpd=true</span><br><span class="line"></span><br><span class="line"># 指定用于本地节点发现的接口，可能的值：接口，IP地址</span><br><span class="line"># 如果未指定此选项，则选择默认接口。</span><br><span class="line">#bt-lpd-interface=</span><br><span class="line"></span><br><span class="line"># 启用节点交换, PT 下载(私有种子)会自动禁用, 默认:true</span><br><span class="line">enable-peer-exchange=true</span><br><span class="line"></span><br><span class="line"># BT 下载最大连接数（单任务），运行时可修改。<span class="number">0</span> 为不限制，默认:<span class="number">55</span></span><br><span class="line"># 理想情况下连接数越多下载越快，但在实际情况是只有少部分连接到的做种者上传速度快，其余的上传慢或者不上传。</span><br><span class="line"># 如果不限制，当下载非常热门的种子或任务数非常多时可能会因连接数过多导致进程崩溃或网络阻塞。</span><br><span class="line"># 进程崩溃：如果设备 CPU 性能一般，连接数过多导致 CPU 占用过高，因资源不足 Aria2 进程会强制被终结。</span><br><span class="line"># 网络阻塞：在内网环境下，即使下载没有占满带宽也会导致其它设备无法正常上网。因远古低性能路由器的转发性能瓶颈导致。</span><br><span class="line">bt-max-peers=<span class="number">128</span></span><br><span class="line"></span><br><span class="line"># BT 下载期望速度值（单任务），运行时可修改。单位 K 或 M 。默认:<span class="number">50</span>K</span><br><span class="line"># BT 下载速度低于此选项值时会临时提高连接数来获得更快的下载速度，不过前提是有更多的做种者可供连接。</span><br><span class="line"># 实测临时提高连接数没有上限，但不会像不做限制一样无限增加，会根据算法进行合理的动态调节。</span><br><span class="line">bt-request-peer-speed-limit=<span class="number">10</span>M</span><br><span class="line"></span><br><span class="line"># 全局最大上传速度限制, 运行时可修改, 默认:<span class="number">0</span> (无限制)</span><br><span class="line"># 设置过低可能影响 BT 下载速度</span><br><span class="line">max-overall-upload-limit=<span class="number">2</span>M</span><br><span class="line"></span><br><span class="line"># 单任务上传速度限制, 默认:<span class="number">0</span> (无限制)</span><br><span class="line">max-upload-limit=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 最小分享率。当种子的分享率达到此选项设置的值时停止做种, <span class="number">0</span> 为一直做种, 默认:<span class="number">1.0</span></span><br><span class="line"># 强烈建议您将此选项设置为大于等于 <span class="number">1.0</span></span><br><span class="line">seed-ratio=<span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"># 最小做种时间（分钟）。设置为 <span class="number">0</span> 时将在 BT 任务下载完成后停止做种。</span><br><span class="line">seed-time=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 做种前检查文件哈希, 默认:true</span><br><span class="line">bt-hash-check-seed=true</span><br><span class="line"></span><br><span class="line"># 继续之前的BT任务时, 无需再次校验, 默认:false</span><br><span class="line">bt-seed-unverified=false</span><br><span class="line"></span><br><span class="line"># BT tracker 服务器连接超时时间（秒）。默认：<span class="number">60</span></span><br><span class="line"># 建立连接后，此选项无效，将使用 bt-tracker-timeout 选项的值</span><br><span class="line">bt-tracker-connect-timeout=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"># BT tracker 服务器超时时间（秒）。默认：<span class="number">60</span></span><br><span class="line">bt-tracker-timeout=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"># BT 服务器连接间隔时间（秒）。默认：<span class="number">0</span> (自动)</span><br><span class="line">#bt-tracker-interval=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># BT 下载优先下载文件开头或结尾</span><br><span class="line">bt-prioritize-piece=head=<span class="number">32</span>M,tail=<span class="number">32</span>M</span><br><span class="line"></span><br><span class="line"># 保存通过 <span class="built_in">WebUI</span>(RPC) 上传的种子文件(.torrent)，默认:true</span><br><span class="line"># 所有涉及种子文件保存的选项都建议开启，不保存种子文件有任务丢失的风险。</span><br><span class="line"># 通过 RPC 自定义临时下载目录可能不会保存种子文件。</span><br><span class="line">rpc-save-upload-metadata=true</span><br><span class="line"></span><br><span class="line"># 下载种子文件(.torrent)自动开始下载, 默认:true，可选：false|mem</span><br><span class="line"># true：保存种子文件</span><br><span class="line"># false：仅下载种子文件</span><br><span class="line"># mem：将种子保存在内存中</span><br><span class="line">follow-torrent=true</span><br><span class="line"></span><br><span class="line"># 种子文件下载完后暂停任务，默认：false</span><br><span class="line"># 在开启 follow-torrent 选项后下载种子文件或磁力会自动开始下载任务进行下载，而同时开启当此选项后会建立相关任务并暂停。</span><br><span class="line">pause-metadata=false</span><br><span class="line"></span><br><span class="line"># 保存磁力链接元数据为种子文件(.torrent), 默认:false</span><br><span class="line">bt-save-metadata=true</span><br><span class="line"></span><br><span class="line"># 加载已保存的元数据文件(.torrent)，默认:false</span><br><span class="line">bt-load-saved-metadata=true</span><br><span class="line"></span><br><span class="line"># 删除 BT 下载任务中未选择文件，默认:false</span><br><span class="line">bt-remove-unselected-file=true</span><br><span class="line"></span><br><span class="line"># BT强制加密, 默认: false</span><br><span class="line"># 启用后将拒绝旧的 BT 握手协议并仅使用混淆握手及加密。可以解决部分运营商对 BT 下载的封锁，且有一定的防版权投诉与迅雷吸血效果。</span><br><span class="line"># 此选项相当于后面两个选项(bt-require-crypto=true, bt-min-crypto-level=arc4)的快捷开启方式，但不会修改这两个选项的值。</span><br><span class="line">bt-force-encryption=true</span><br><span class="line"></span><br><span class="line"># BT加密需求，默认：false</span><br><span class="line"># 启用后拒绝与旧的 BitTorrent 握手协议(\<span class="number">19</span>BitTorrent protocol)建立连接，始终使用混淆处理握手。</span><br><span class="line">#bt-require-crypto=true</span><br><span class="line"></span><br><span class="line"># BT最低加密等级，可选：plain（明文），arc4（加密），默认：plain</span><br><span class="line">#bt-min-crypto-level=arc4</span><br><span class="line"></span><br><span class="line"># 分离仅做种任务，默认：false</span><br><span class="line"># 从正在下载的任务中排除已经下载完成且正在做种的任务，并开始等待列表中的下一个任务。</span><br><span class="line">bt-detach-seed-only=true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 客户端伪装 ##</span><br><span class="line"></span><br><span class="line"># 自定义 User Agent</span><br><span class="line">user-agent=Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">93.0</span>.<span class="number">4577.63</span> Safari/<span class="number">537.36</span> Edg/<span class="number">93.0</span>.<span class="number">961.47</span></span><br><span class="line"></span><br><span class="line"># BT 客户端伪装</span><br><span class="line"># PT 下载需要保持 user-agent 和 peer-agent 两个参数一致</span><br><span class="line"># 部分 PT 站对 Aria2 有特殊封禁机制，客户端伪装不一定有效，且有封禁账号的风险。</span><br><span class="line"><span class="selector-id">#user-agent</span>=Deluge <span class="number">1.3</span>.<span class="number">15</span></span><br><span class="line">peer-agent=Deluge <span class="number">1.3</span>.<span class="number">15</span></span><br><span class="line">peer-id-prefix=-DE13F0-</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 执行额外命令 ##</span><br><span class="line"></span><br><span class="line"># 下载停止后执行的命令</span><br><span class="line"># 从 正在下载 到 删除、错误、完成 时触发。暂停被标记为未开始下载，故与此项无关。</span><br><span class="line">on-download-stop=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\delete.sh</span><br><span class="line"></span><br><span class="line"># 下载完成后执行的命令</span><br><span class="line"># 此项未定义则执行 下载停止后执行的命令 (on-download-stop)</span><br><span class="line">on-download-complete=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\clean.sh</span><br><span class="line"></span><br><span class="line"># 下载错误后执行的命令</span><br><span class="line"># 此项未定义则执行 下载停止后执行的命令 (on-download-stop)</span><br><span class="line">#on-download-error=</span><br><span class="line"></span><br><span class="line"># 下载暂停后执行的命令</span><br><span class="line">#on-download-pause=</span><br><span class="line"></span><br><span class="line"># 下载开始后执行的命令</span><br><span class="line">#on-download-start=</span><br><span class="line"></span><br><span class="line"># BT 下载完成后执行的命令</span><br><span class="line">#on-bt-download-complete=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## RPC 设置 ##</span><br><span class="line"></span><br><span class="line"># 启用 JSON-RPC/XML-RPC 服务器, 默认:false</span><br><span class="line">enable-rpc=true</span><br><span class="line"></span><br><span class="line"># 接受所有远程请求, 默认:false</span><br><span class="line">rpc-allow-origin-all=true</span><br><span class="line"></span><br><span class="line"># 允许外部访问, 默认:false</span><br><span class="line">rpc-listen-all=true</span><br><span class="line"></span><br><span class="line"># RPC 监听端口, 默认:<span class="number">6800</span></span><br><span class="line">rpc-listen-port=<span class="number">6800</span></span><br><span class="line"></span><br><span class="line"># RPC 密钥</span><br><span class="line">rpc-secret=P3TERX</span><br><span class="line"></span><br><span class="line"># RPC 最大请求大小</span><br><span class="line">rpc-max-request-size=<span class="number">10</span>M</span><br><span class="line"></span><br><span class="line"># RPC 服务 SSL/TLS 加密, 默认：false</span><br><span class="line"># 启用加密后必须使用 https 或者 wss 协议连接</span><br><span class="line"># 不推荐开启，建议使用 web server 反向代理，比如 Nginx、Caddy ，灵活性更强。</span><br><span class="line">#rpc-secure=false</span><br><span class="line"></span><br><span class="line"># 在 RPC 服务中启用 SSL/TLS 加密时的证书文件(.pem/.crt)</span><br><span class="line">#rpc-certificate=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\xxx.pem</span><br><span class="line"></span><br><span class="line"># 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件(.key)</span><br><span class="line">#rpc-private-key=D:\aria2-<span class="number">1.37</span>.<span class="number">0</span>\xxx.key</span><br><span class="line"></span><br><span class="line"># 事件轮询方式, 可选：epoll, kqueue, port, poll, select, 不同系统默认值不同</span><br><span class="line">#event-poll=select</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 高级选项 ##</span><br><span class="line"></span><br><span class="line"># 启用异步 DNS 功能。默认：true</span><br><span class="line">#async-dns=true</span><br><span class="line"></span><br><span class="line"># 指定异步 DNS 服务器列表，未指定则从 /etc/resolv.conf 中读取。</span><br><span class="line">#async-dns-server=<span class="number">119.29</span>.<span class="number">29.29</span>,<span class="number">223.5</span>.<span class="number">5.5</span>,<span class="number">8.8</span>.<span class="number">8.8</span>,<span class="number">1.1</span>.<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line"># 指定单个网络接口，可能的值：接口，IP地址，主机名</span><br><span class="line"># 如果接口具有多个 IP 地址，则建议指定 IP 地址。</span><br><span class="line"># 已知指定网络接口会影响依赖本地 RPC 的连接的功能场景，即通过 localhost 和 <span class="number">127.0</span>.<span class="number">0.1</span> 无法与 Aria2 服务端进行讯通。</span><br><span class="line">#interface=</span><br><span class="line"></span><br><span class="line"># 指定多个网络接口，多个值之间使用逗号(,)分隔。</span><br><span class="line"># 使用 interface 选项时会忽略此项。</span><br><span class="line">#multiple-interface=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 日志设置 ##</span><br><span class="line"></span><br><span class="line"># 日志文件保存路径，忽略或设置为空为不保存，默认：不保存</span><br><span class="line">#log=</span><br><span class="line"></span><br><span class="line"># 日志级别，可选 debug, info, notice, warn, error 。默认：debug</span><br><span class="line">#log-level=warn</span><br><span class="line"></span><br><span class="line"># 控制台日志级别，可选 debug, info, notice, warn, error ，默认：notice</span><br><span class="line">console-log-level=notice</span><br><span class="line"></span><br><span class="line"># 安静模式，禁止在控制台输出日志，默认：false</span><br><span class="line">quiet=false</span><br><span class="line"></span><br><span class="line"># 下载进度摘要输出间隔时间（秒），<span class="number">0</span> 为禁止输出。默认：<span class="number">60</span></span><br><span class="line">summary-interval=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 增强扩展设置(非官方) ##</span><br><span class="line"></span><br><span class="line"># 仅适用于 myfreeer/aria2-build-msys2 (Windows) 和 P3TERX/Aria2-Pro-Core (GNU/Linux) 项目所构建的增强版本</span><br><span class="line"></span><br><span class="line"># 在服务器返回 HTTP <span class="number">400</span> Bad Request 时重试，仅当 retry-wait &gt; <span class="number">0</span> 时有效，默认 false</span><br><span class="line">#retry-on-<span class="number">400</span>=true</span><br><span class="line"></span><br><span class="line"># 在服务器返回 HTTP <span class="number">403</span> Forbidden 时重试，仅当 retry-wait &gt; <span class="number">0</span> 时有效，默认 false</span><br><span class="line">#retry-on-<span class="number">403</span>=true</span><br><span class="line"></span><br><span class="line"># 在服务器返回 HTTP <span class="number">406</span> Not Acceptable 时重试，仅当 retry-wait &gt; <span class="number">0</span> 时有效，默认 false</span><br><span class="line">#retry-on-<span class="number">406</span>=true</span><br><span class="line"></span><br><span class="line"># 在服务器返回未知状态码时重试，仅当 retry-wait &gt; <span class="number">0</span> 时有效，默认 false</span><br><span class="line">#retry-on-unknown=true</span><br><span class="line"></span><br><span class="line"># 是否发送 Want-Digest HTTP 标头。默认：false (不发送)</span><br><span class="line"># 部分网站会把此标头作为特征来检测和屏蔽 Aria2</span><br><span class="line">#http-want-digest=false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## BitTorrent trackers ##</span><br><span class="line">bt-tracker=</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aria2 </tag>
            
            <tag> AriaNg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署</title>
      <link href="/2024/06/21/hexo%E9%83%A8%E7%BD%B2/"/>
      <url>/2024/06/21/hexo%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><a href="https://so.csdn.net/so/search?q=Hexo&spm=1001.2101.3001.7020">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown 解析文章，在几秒内，即可利用靓丽的主题生成静态网页。通过 Hexo 的官方网站 <a href="https://hexo.io/">https://hexo.io/</a> 了解更多关于这个博客框架，它拥有中文文档。</li></ul><h1 id="一、nodejs"><a href="#一、nodejs" class="headerlink" title="一、nodejs"></a>一、nodejs</h1><h2 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h2><ul><li><a href="https://nodejs.org/en">官网地址</a></li><li>更改默认安装位置，安装<code>D:\nodejs</code>路径下</li><li><code>D:\nodejs</code>目录下新建<code>node_cache</code>和<code>node_global</code>文件夹</li><li><code>D:\nodejs\node_cache</code>目录下新建<code>_logs</code>文件夹</li><li>不勾选，避免下载python、vscode等工具<br><img src="https://cf.dreamf.fun/image/202406212124210.png" alt="image.png"></li></ul><h2 id="2、系统变量"><a href="#2、系统变量" class="headerlink" title="2、系统变量"></a>2、系统变量</h2><ul><li>指定<code>D:\nodejs\node_cache</code></li><li>指定<code>D:\nodejs\node_global</code></li><li>指定<code>D:\nodejs\</code></li><li><img src="https://cf.dreamf.fun/image/202406062228650.png" alt="image.png"></li></ul><h2 id="3、设置文件位置"><a href="#3、设置文件位置" class="headerlink" title="3、设置文件位置"></a>3、设置文件位置</h2><ul><li>prefix &#x3D; 创建的node_global文件夹所在路径<ul><li>npm config set prefix <code>D:\Nodejs\node_global</code></li></ul></li><li>cache &#x3D; 创建的node_cache文件夹所在路径<ul><li>npm config set cache <code>D:\Nodejs\node_cache</code></li></ul><p>  #补充 注意该命令的路径最好手打，避免符号、格式错误</p></li></ul><h2 id="4、镜像源"><a href="#4、镜像源" class="headerlink" title="4、镜像源"></a>4、镜像源</h2><ul><li><p>查看当前镜像源<br>  npm get registry</p></li><li><p>更改指定源：如淘宝。<br>  npm config set registry <a href="https://registry.npmmirror.com/">https://registry.npmmirror.com/</a><br>  #补充 </p></li><li><p>你在npm的时候可能会碰到request  to <a href="https://registry.npm.taobao.org/html2canvas">https://registry.npm.taobao.org/html2canvas</a> failed, reason: certificate has expired，请修改你的淘宝镜像配置</p></li><li><p>旧镜像地址 <code>已失效</code>：<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org/</a>                              </p></li><li><p>新镜像地址：<a href="https://registry.npmmirror.com/">https://registry.npmmirror.com/</a></p></li></ul><h2 id="5、验证"><a href="#5、验证" class="headerlink" title="5、验证"></a>5、验证</h2><ul><li>node -v</li><li>npm -v<br><img src="https://cf.dreamf.fun/image/202406212118056.png" alt="img"></li></ul><h1 id="二、Git"><a href="#二、Git" class="headerlink" title="二、Git"></a>二、Git</h1><h2 id="1、安装-1"><a href="#1、安装-1" class="headerlink" title="1、安装"></a>1、安装</h2><ul><li><a href="https://git-scm.com/">官网地址</a>、<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">阿里云镜像地址</a></li><li>更改默认安装位置，安装<code>D:\Git</code>路径下</li><li>安装组件选择：根据需要选择<br><img src="https://cf.dreamf.fun/image/202406212133390.png" alt="img"></li><li>选择默认的编辑器：默认vim</li><li>调整Git的环境变量：一般默认选择第二项<ul><li><p>Use Git from Git Bash only</p><ul><li>仅使用Git Bash中的Git<br>  这是最谨慎的选择，因为它不会修改你的系统环境变量（PATH）。你只能在Git Bash中使用Git命令行工具。</li></ul></li><li><p>Git from the command line and also from 3rd-party software</p><ul><li>从命令行和第三方软件中使用Git<br>  这是推荐的选项，它会将一些最基本的Git包装器添加到你的系统环境变量（PATH），以避免在环境中混乱地添加可选的Unix工具。你将能够从Git Bash、命令提示符和Windows PowerShell中使用Git，并且可以在PATH中寻找Git的任何第三方软件。</li></ul></li><li><p>Use Git and optional Unix tools from the Command Prompt</p><ul><li>从命令提示符中使用Git和可选的Unix工具<br>  这个选项会将Git和可选的Unix工具都添加到你的系统环境变量（PATH）中。需要注意的是，这将覆盖Windows中的一些工具（如”find”和”sort”）。只有当你完全理解这些影响并愿意接受时，才应选择这个选项。<br>  <img src="https://cf.dreamf.fun/image/202406212142389.png" alt="image.png"></li></ul></li></ul></li><li>选择 SSH 执行文件：默认，第一项</li><li>一路默认，下一步</li></ul><h2 id="2、系统变量-1"><a href="#2、系统变量-1" class="headerlink" title="2、系统变量"></a>2、系统变量</h2><ul><li>指定<code>D:\Git\bin</code></li><li>指定<code>D:\Git</code><br><img src="https://cf.dreamf.fun/image/202406212157304.png" alt="image.png"></li></ul><h2 id="3、验证"><a href="#3、验证" class="headerlink" title="3、验证"></a>3、验证</h2><ul><li>git –version<br><img src="https://cf.dreamf.fun/image/202406212158938.png" alt="image.png"></li></ul><h1 id="三、hexo"><a href="#三、hexo" class="headerlink" title="三、hexo"></a>三、hexo</h1><p><strong><code>首先必须管理员运行Git命令行程序,以下命令都在git命令行中运行</code></strong></p><h2 id="1、安装-2"><a href="#1、安装-2" class="headerlink" title="1、安装"></a>1、安装</h2><ul><li><p>git执行安装命令<br>  npm install -g hexo-cli</p></li><li><p>等待安装结束。  </p></li><li><p>选择一个目录来初始化博客：（例如 E:&#x2F;gihub）,该目录必须空的。</p></li><li><p>git执行初始化命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd e:/github</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>执行成功后，安装两个插件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-server</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者按照官方文档 直接</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>然后本机可查看博客：运行该命令</p><ul><li>hexo s   或</li><li>hexo server<br>  <img src="https://cf.dreamf.fun/image/202406212208904.png" alt="image.png"></li></ul></li><li><p>打开浏览器输入<code>localhost:4000</code>可以看到初始界面。按 Ctrl+C 关闭本地服务器。</p></li></ul><h2 id="2、常用命令"><a href="#2、常用命令" class="headerlink" title="2、常用命令"></a>2、常用命令</h2><ul><li>清除缓存<ul><li>hexo clean   或</li><li>hexo c</li></ul></li><li>生成静态文件<ul><li>hexo generate  或</li><li>hexo g</li></ul></li><li>启动服务器<ul><li>hexo server 或</li><li>hexo s</li></ul><p>  #补充 以上3条命令重启hexo服务</p></li><li>新建发布文章<ul><li>hexo new xxx<br>  <code>github\source\_posts</code>下新建一个xxx.md</li></ul></li><li>新建草稿<ul><li>hexo new draft xxx<br>  <code>github\source\_drafts</code>下新建一个xxx.md,此时本地服务器上并没有更新出该文章</li></ul></li><li>发布草稿<ul><li>hexo publish xxx<br>  你会发现<code>github\source\_drafts</code>下的xxx.md不见了，跑到了_posts里面，说明草稿发布成功了。</li></ul></li></ul><h2 id="3、验证-1"><a href="#3、验证-1" class="headerlink" title="3、验证"></a>3、验证</h2><ul><li>hexo –verson<br><img src="/" alt="Uploading file...09qtx"></li></ul><h1 id="四、Github"><a href="#四、Github" class="headerlink" title="四、Github"></a>四、Github</h1><h2 id="1、仓库创建"><a href="#1、仓库创建" class="headerlink" title="1、仓库创建"></a>1、仓库创建</h2><ul><li>打开 GitHub ，点击 new 一个repository，创建一个新的仓库，仓库名称必须要遵守 GitHub Pages 的格式： 用户名.github.io ，否则会出问题，并且勾选 Initialize this repository with a README ，如下图所示。<br><img src="https://cf.dreamf.fun/image/202406212212720.png" alt="image.png"></li><li>建好仓库后， <strong>Settings</strong>–&gt; GitHub Pages ，该页面存在GitHub Pages 默认创建好的域名。在浏览器中访问就可以看到一个初始的界面，这就是博客的默认地址</li><li>custom domain：填写自定义域名<ul><li>CNAME：自定义域名指向GitHub默认地址</li><li>A：@指向185.199.108.153、185.199.109.153、185.199.110.153、185.199.111.153</li></ul></li><li><code>注意branch要和hexo的配置文件_config.yml里的deploy-branch保持一致</code>，避免文章看不到。可通过修改GitHubpage页面的默认分支实现</li></ul><p><img src="https://cf.dreamf.fun/image/202406212329516.png" alt="image.png"></p><h2 id="2、SSH设置"><a href="#2、SSH设置" class="headerlink" title="2、SSH设置"></a>2、SSH设置</h2><ul><li>务必确保在 <strong>本地PC</strong> 已经完成了Node.js、Git 和 Hexo 的安装，打开 Git Bash ，如果是第一次使使用 Git 的话：</li><li>#补充 不是第一次可直接到<code>C:\Users\jiuji\.ssh</code>下寻找id_rsa.pub文件</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下 user.name 和 user.email 输入自己的github用户名和邮箱，示例：</span></span><br><span class="line">git config --global user.name &quot;ideallove&quot;</span><br><span class="line">git config --global user.email ideallove@example.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>使用 ssh-keygen 生成私钥和公钥：</p><ul><li>ssh-keygen -t rsa</li></ul></li><li><p>一路回车，找到你的的密钥 <code>id_rsa</code> 和公钥 <code>id_rsa.pub</code> 的位置<br><img src="https://cf.dreamf.fun/image/202406212216942.png" alt="image.png"></p></li><li><p> GitHub <strong>头像下的 Settings</strong> 里找到添加 SSH key，点击<strong>New SSH key</strong> 。<br><img src="https://cf.dreamf.fun/image/202406212220777.png" alt="image.png"></p></li><li><p>将刚刚生成的公钥 <code>id_rsa.pub</code> 文件里的内容复制到 Key 里面，然后选择添加，GitHub 会提示输入密码确认。</p></li><li><p><strong>本地PC</strong> 的 Git bash 上输入</p><ul><li>ssh -T <a href="mailto:&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#117;&#98;&#46;&#x63;&#111;&#x6d;">&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#117;&#98;&#46;&#x63;&#111;&#x6d;</a><br>  <img src="https://cf.dreamf.fun/image/202406212221119.png" alt="image.png"></li></ul><p>  #补充 第一次的时候依旧会让你 yes 确认 ，如果看到 Hi 后面是自己的用户名，就说明成功了</p></li></ul><h2 id="3、在本地PC上完成推送部署"><a href="#3、在本地PC上完成推送部署" class="headerlink" title="3、在本地PC上完成推送部署"></a>3、在本地PC上完成推送部署</h2><ul><li>在刚刚我们生成的 E:&#x2F;github 目录下，找到 hexo 的配置文件 <code>_config.yml</code> ，在最下面有个 <code>deploy</code> 的配置，在那里<strong>修改为自己的 ID</strong></li><li><img src="https://cf.dreamf.fun/image/202406212223917.png" alt="image.png"></li></ul><p>#补充 缩进一定不能出问题。</p><ul><li>保存并退出，然后发布到 GitHub 上<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当然也可简写成</span></span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里，不一定每次都要 clean，clean 会清除缓存，导致一些计数脚本清零。</span></span><br></pre></td></tr></table></figure></li><li>我们就可以在<strong>本地PC</strong> 浏览器上输入 GitHub Pages 的域名 <code>https://自己的用户名.github.io</code> 访问我们的博客了。</li></ul><h2 id="4、创建CNAME-md"><a href="#4、创建CNAME-md" class="headerlink" title="4、创建CNAME.md"></a>4、创建CNAME.md</h2><ul><li><p>Hexo 会将 public 目录中的文件和目录推送至 config.yml 中指定的远端仓库和分支中，并且完全覆盖该分支下的已有内容。</p></li><li><p>因为public 文件下没有CNAME文件，所以推送的时候远程分支的内容因为被完全覆盖所以CNAME文件也会被删除，所以就会导致404。</p></li><li><p>而public下的文件是由source文件夹的内容生成的，因此正确的配置绑定域名方法应该是在source文件下（直接在public文件夹下也可以）新建CNAME.md文件并配置域名。<br><img src="https://cf.dreamf.fun/image/202406222210197.png" alt="image.png"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> git </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>modbus</title>
      <link href="/2024/06/07/modbus/"/>
      <url>/2024/06/07/modbus/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Modbus 是一种串行通信协议，广泛应用于工业自动化领域，用于在不同设备之间进行数据交换和控制</p><ol><li><strong>主从架构</strong>：Modbus 采用主从通信模式，其中一个设备作为主设备，其他设备作为从设备。主设备可以向从设备发送请求，从设备则响应请求并返回数据。</li><li><strong>数据类型</strong>：Modbus 支持多种数据类型，包括位（布尔值）、整数、浮点数等。</li><li><strong>功能码</strong>：Modbus 定义了一系列功能码，用于实现不同的操作，如读取输入&#x2F;输出状态、读取寄存器数据、写入寄存器数据等。</li><li><strong>传输介质</strong>：Modbus 可以通过串口（如 RS-232、RS-485）或以太网进行通信。</li><li><strong>简单易用</strong>：Modbus 协议相对简单，易于实现和集成到各种工业设备中。</li></ol><p>硬件层协议：<strong>解决0和1的可靠传输，常有RS232、RS485、CAN、IIC、SPI …</strong><br>软件层协议：解决传输目的,常有Modbus、TCP&#x2F;IP、CANopen …</p><h2 id="Modebus通信过程"><a href="#Modebus通信过程" class="headerlink" title="Modebus通信过程"></a>Modebus通信过程</h2><p>注意Modbus是一主多从的通信协议</p><p>Modbus通信中只有一个设备可以发送请求。其他从设备接收主机发送的数据来进行响应，从机是任何外围设备，如I&#x2F;O传感器，阀门，网络驱动器，或其他测量类型的设备。从站处理信息和使用Modbus将其数据发送给主站。</p><p>也就是说,不能Modbus同步进行通信,主机在同一时间内只能向一个从机发送请求，总线上每次只有一个数据进行传输,即主机发送,从机应答,主机不发送,总线上就没有数据通信。</p><p>从机不会自己发送消息给主站，只能回复从主机发送的消息请求。<br><img src="https://cf.dreamf.fun/image/202406072139307.png" alt="image.png"></p><h2 id="Modbus存储区"><a href="#Modbus存储区" class="headerlink" title="Modbus存储区"></a>Modbus存储区</h2><ul><li>存储的数据类型<ul><li><p>布尔量<br>  布尔量比如IO口的电平高低，灯的开关状态等。</p></li><li><p>16位寄存器<br>  16位寄存器比如 传感器的温度数据，存储的密码等。</p></li></ul></li></ul><table><thead><tr><th>存储区名称</th><th>区号</th><th>写入权限</th><th>内容形式</th><th>地址范围</th></tr></thead><tbody><tr><td>线圈</td><td>01</td><td>读写</td><td>位（0 或 1）</td><td>00001-09999</td></tr><tr><td>离散输入</td><td>02</td><td>只读</td><td>位（0 或 1）</td><td>10001-19999</td></tr><tr><td>保持寄存器</td><td>03</td><td>读写</td><td>字（16 位整数）</td><td>40001-49999</td></tr><tr><td>输入寄存器</td><td>04</td><td>只读</td><td>字（16 位整数）</td><td>30001-39999</td></tr></tbody></table><p>Modbus数据模型规定了具体的地址范围，每一个从机，都有实际的物理存储，跟modbus的存储区相对应，<strong>主机读写从机的存储区，实际上就是对从机设备对应的实际存储空间进行读写。</strong></p><ol><li><strong>客户端发送请求</strong>：客户端（如主站）向 Modbus 从站发送请求，请求中包含要读取或写入的数据地址和数据类型等信息。</li><li><strong>从站处理请求</strong>：从站接收到请求后，根据请求中的地址和数据类型，在其内部的数据存储区中查找相应的数据。</li><li><strong>从站返回响应</strong>：从站将找到的数据或执行结果返回给客户端，响应中包含数据值或错误代码等信息。</li><li><strong>客户端处理响应</strong>：客户端接收到响应后，根据响应中的数据或错误代码进行相应的处理。</li></ol><p><img src="https://cf.dreamf.fun/image/202406072218936.png" alt="image.png"></p><p>在 Modbus 数据模型中，数据的读写操作是基于寄存器的。客户端可以通过读取保持寄存器或输入寄存器中的数据来获取从站的状态或测量值，也可以通过写入保持寄存器中的数据来控制从站的行为。</p><h2 id="Modbus协议类型"><a href="#Modbus协议类型" class="headerlink" title="Modbus协议类型"></a>Modbus协议类型</h2><ul><li><p>串行端口存在多个版本的Modbus协议，而最常见的是下面四种：</p><ul><li><code>Modbus-Rtu</code></li><li>Modbus-Ascii</li><li>Modbus-Tcp</li><li>ModbusPlus</li></ul></li><li><p>Modbus RTU是一种紧凑的，十六进制表示数据的方式，RTU格式后续的命令&#x2F;数据带有循环冗余校验的校验和</p></li><li><p>Modbus ASCII是一种采用Ascii码表示数据，并且每个8Bit 字节都作为两个ASCII字符发送的表示方式，ASCII格式采用纵向冗余校验的校验和。</p></li></ul><h2 id="Modbus-RTU协议"><a href="#Modbus-RTU协议" class="headerlink" title="Modbus-RTU协议"></a>Modbus-RTU协议</h2><ul><li><p>Modbus报文帧结构</p><blockquote><p>一个报文就是一帧数据，一个数据帧就一个报文： 指的是一串完整的指令数据，本质就是一串数据。  </p></blockquote></li><li><p><strong>Modbus报文是指主机发送给从机的一帧数据，其中包含着从机的地址，主机想执行的操作，校验码等内容</strong></p></li><li><p>Modbus-RTU协议在串行链路上的报文格式如下所示：<br>  <img src="https://cf.dreamf.fun/image/202406072224742.png" alt="image.png"></p></li><li><p>Modbus RTU 报文格式如下：</p></li></ul><table><thead><tr><th>地址</th><th>功能码</th><th>数据</th><th>校验</th></tr></thead><tbody><tr><td>1 字节</td><td>1 字节</td><td>N 字节</td><td>2 字节</td></tr></tbody></table><ul><li><strong>地址</strong>：从站设备地址，1 字节，取值范围 0-247。</li><li><strong>功能码</strong>：表示操作类型，1 字节，常见的功能码有 01（读线圈状态）、02（读离散输入状态）、03（读保持寄存器）、04（读输入寄存器）、05（写单个线圈）、06（写单个保持寄存器）、15（写多个线圈）、16（写多个保持寄存器）等。</li><li><strong>数据</strong>：根据功能码的不同，数据的格式和长度也不同。例如，读线圈状态时，数据为 0 或 1；读保持寄存器时，数据为 2 字节的寄存器值；写单个线圈时，数据为 0 或 1；写单个保持寄存器时，数据为 2 字节的寄存器值。</li><li><strong>校验</strong>：采用 CRC16 校验，2 字节，用于检测报文的正确性。</li></ul><h2 id="Modbus功能码"><a href="#Modbus功能码" class="headerlink" title="Modbus功能码"></a>Modbus功能码</h2><table><thead><tr><th align="center">功能码</th><th align="center">名称</th><th align="center">操作</th></tr></thead><tbody><tr><td align="center">01</td><td align="center">读线圈状态</td><td align="center">读取从站离散输出线圈的通断状态</td></tr><tr><td align="center">02</td><td align="center">读离散输入状态</td><td align="center">读取从站离散输入的通断状态</td></tr><tr><td align="center">03</td><td align="center">读保持寄存器</td><td align="center">读取从站保持寄存器的内容</td></tr><tr><td align="center">04</td><td align="center">读输入寄存器</td><td align="center">读取从站输入寄存器的内容</td></tr><tr><td align="center">05</td><td align="center">写单个线圈</td><td align="center">将从站的单个线圈设置为 ON 或 OFF</td></tr><tr><td align="center">06</td><td align="center">写单个保持寄存器</td><td align="center">将从站的单个保持寄存器设置为指定值</td></tr><tr><td align="center">15</td><td align="center">写多个线圈</td><td align="center">将从站的多个线圈设置为 ON 或 OFF</td></tr><tr><td align="center">16</td><td align="center">写多个保持寄存器</td><td align="center">将从站的多个保持寄存器设置为指定值</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 串行通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> modbus </tag>
            
            <tag> 串行通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Root</title>
      <link href="/2024/05/14/ROOT/"/>
      <url>/2024/05/14/ROOT/</url>
      
        <content type="html"><![CDATA[<p>———————〖⚠注意··事项⚠〗———————<br>①刷机前请做好备份-(包括但不限于：应用数据、基带-(为啥有基带：因为有酷友刷机把基带刷没了!)<br>②刷机时请确保该ROM包为该机型专属或官改.避免刷入导致刷机失败，另外联发科(天玑)刷错可能会黑(自己手挫的官改刷入失败就另外说)<br>③刷机前请确认好刷机的模式，选择正确的刷机模式，避免误锁🔒BL (指miflash）<br>④刷机过程中，请勿拔线～不然导致刷机失败翻车  </p><p>目录：『①』确保刷机成功率和避免爆错的前提操作<br>『②』教程图解：如下图所示～</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_f456e383_8666_5969_830@2091x1293.jpeg.m.jpg"></p><p>图文教学解析</p><p>———————————————————————<br>正片开始：<br>『①』：前提操作<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_57_dogehechi.png" alt="doge呵斥"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_bc612b40_8666_5979_248@1909x519.jpeg.m.jpg"></p><p>前提操作-图鉴</p><p>—Android·设置：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_533c0a6b_8666_5987_753@2350x215.jpeg.m.jpg"></p><p>Android设置</p><p>—Windows·设置：(以Windows 11为例)</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_1314a1d3_8666_5996_115@3899x215.jpeg.m.jpg"></p><p>Windows设置</p><p>杀毒程序关闭以后，Windows进行驱动安装<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_f6a327d7_8666_6_758@1120x686.jpeg.m.jpg"></p><p>驱动目录</p><p>安装完毕后，即可开始刷机<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"><br>附图：-&gt;切换刷机模式</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_ec21aef8_8666_601_717@1891x367.jpeg.m.jpg"></p><p>模式切换</p><p>———————————————————————<br>———————————————————————  </p><p>『②』：『图文教学』<br>〈1〉第一部分：线刷<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_4f36c8ec_8666_6014_225@1446x670.jpeg.m.jpg"></p><p>本节图解预览</p><p>———————————————————————<br>⒈〖小米手机助手〗：<br>点评：优点：无脑简单、操作方便<br>缺点：刷完回锁🔒<br>操作：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_9ec2d340_8666_6018_173@2209x215.jpeg.m.jpg"></p><p>“小米手机助手”线刷流程图</p><p>下图为“小米手机助手”，Fastboot状态下连接电脑自动识别刷机模式，找到线刷包(已解压)，点击刷机即可，等待ing……<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_42_diaoxie.png" alt="凋谢"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_2c2de955_8678_5164_521@988x700.jpeg.m.jpg"></p><p>小米手机助手</p><p>———————————————————————<br>⒉〖Miflash〗:<br>点评：优点：操作简单、刷入方便、有三种模式可供选择(自行斟酌<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰">)<br>缺点：可能会有玄学问题，线刷时间玄学过长、无端报错、显示刷完但可能嘎了<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_56_dogexiaoku.png" alt="doge笑哭"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_fdf28020_8670_8385_266@294x31.jpeg.m.jpg"></p><p>miflash刷机模式</p><p>驱动：安装：<br>⒈选择“Driver”</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_3f4da36a_8670_8394_69@1112x737.jpeg.m.jpg"></p><p>点“Driver”</p><p>⒉点击“安装”，等待驱动安装成功</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_e92a4cd9_8670_8403_778@728x441.jpeg.m.jpg"></p><p>安装miflash驱动</p><p>操作：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_fd46dde6_8670_8409_443@2838x215.jpeg.m.jpg"></p><p>刷机流程</p><p>备注：fastboot连接电脑，先找到线刷包(已解压)或者先“加载设备”后选择找线刷包也是可以的，确保当前有设备(核对好是否为你的设备编号)，也确保当前线刷包没选错包(尽可能不选有中文路径的<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_56_dogexiaoku.png" alt="doge笑哭">)-&gt;最后点击“刷机”<br>特别强调：可能选择了“全部删除”的老哥会出现一下报错(error)<br>报错信息：“error:Not catch checkpoint ($fastboot -s .*1ock), flash is not done”-&gt;这个为正常现象，这个报错是因为没上锁BL导致的，不影响手机使用<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_a2eddc15_8670_8417_23@1114x254.jpeg.m.jpg"></p><p>“BL锁未上报错”</p><p>———————————————————————<br>⒊〖工具箱(仅电脑)〗：-&gt;这里以“搞机助手”为例<br>点评：优点：图像化容易上手、功能较多、操作方便<br>缺点：没啥缺点(用的少，也不知道)<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_42_diaoxie.png" alt="凋谢"><br>操作：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_8b48f554_8670_8426_732@3968x215.jpeg.m.jpg"></p><p>“搞机助手”线刷流程</p><p>备注：Fastboot连接电脑，在“引导模式”找到“小米线刷”，并准备好线刷包(需解压)</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_1378821f_8670_8432_531@775x506.jpeg.m.jpg"></p><p>“搞机助手”主页</p><p>选择“小米线刷”，然后按照上面的提示来进行操作(简单上手，挺简单的<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰">)</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_d37058a2_8670_8437_174@775x507.jpeg.m.jpg"></p><p>选择“小米线刷”</p><p>如下图所示，点击“选择脚本”，找到线刷包(已解压)的目录找到脚本(如果不知道脚本是啥，可点击“脚本选择说明”进行查看详细说明)，选中并点击“开始刷入”-&gt;开始线刷</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_a5821b5b_8670_8445_983@639x363.jpeg.m.jpg"></p><p>“搞机助手”-小米线刷</p><p>———————————————————————<br>⒋〖ADB〗:-&gt;这里以“Platform-Tools”为例<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_56_dogexiaoku.png" alt="doge笑哭"><br>点评：优点：真·无脑<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"><br>缺点：有几率会线刷失败(正常现象)<br>操作：<br>①进CMD命令框：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_44672cbd_8682_0191_385@2763x215.jpeg.m.jpg"></p><p>进cmd命令框</p><p>如下图所示，输入：“cmd”回车，即可开启cmd命令框，之后可以在“cmd命令框”里输入“adb”来检测adb是否成功激活.</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_f9212d12_8682_0194_568@1006x242.jpeg.m.jpg"></p><p>“cmd命令框”启动</p><p>②写入刷机脚本：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_1bde5f8e_8674_6337_991@2209x215.jpeg.m.jpg"></p><p>“ADB”线刷流程</p><p>实际图如下图所示：与miflash一样可以选择三种刷机模式(.bat)，具体看个人选择<br>——flash_all.bat：全部删除<br>——flash_all_expect_storage.bat：保留用户数据<br>——flash_all_lock.bat：刷完回锁</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_fdd0242b_8674_6348_785@779x181.jpeg.m.jpg"></p><p>图示：全部删除</p><p>等待刷机完毕，如果出错会显示报错信息-(error&#x2F;Fail)<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_56_dogexiaoku.png" alt="doge笑哭">  </p><p>———————————————————————<br>———————————————————————<br>『②』：图文教学～<br>〈2〉第二部分：卡刷<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_20_qinqin.png" alt="亲亲"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰">-&gt;(MIUI&#x2F;类原生)</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_bbf8e2e9_8674_6353_88@1640x670.jpeg.m.jpg"></p><p>MIUI卡刷-图鉴</p><p>类原生-&gt;在肝帖中ing……(误:投俩硬币<img src="http://static.coolapk.com/emoticons/v9/c_coolb.png" alt="酷币"><img src="http://static.coolapk.com/emoticons/v9/c_coolb.png" alt="酷币">，助力更新<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰">)<br>———————————————————————<br>⒌〖第三方Recovery(天玑除外)〗：<br>⚠警示⚠：天玑的老哥们别不信邪自己刷入第三方recovery，风险不是一般的大，成砖后即使能进fastBoot也自己救不了的(除非有石粒<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰">)，只能送售后换主板.<br>点评：优点：可不受设备限制、刷入简单、容易上手<br>缺点：刷入第三方recovery稍显门槛，但不多<br>操作：-&gt;(以TWRP为例)-刷入教程请看我的其他帖子</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_2516c5ce_8674_6356_505@2561x215.jpeg.m.jpg"></p><p>TWRP线刷流程</p><p>如图所示：<br>①找到要刷入的卡刷包(.zip)</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_77457e74_8674_6362_565@1022x2032.png.m.jpg"></p><p>“安装”界面</p><p>如图所示：<br>②确保“zip开启校验”已关闭关闭(默认关闭)，“跳过Digest校验”关不关影响不大(默认开启)，确认好以后，滑动滑块确认刷入.</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_5853f0e1_8674_637_126@1022x2036.png.m.jpg"></p><p>卡刷前的选项</p><p>最后等待刷入完成，重启系统即可～如果卡开机界面，请重新格式化一遍data分区-&gt;重启到Recovery-&gt;重启到系统～解决.</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_d06959fc_8674_638_910@2529x215.jpeg.m.jpg"></p><p>卡开机界面</p><p>如果解决不了，请查看包源作者的通知声明，是否需要底包&#x2F;底包版本、刷入方式等等<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽">…  </p><p>———————————————————————<br>⒍〖小米手机助手〗：<br>点评：优点：无脑简单、操作方便<br>缺点：刷完回锁🔒<br>操作：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_184958b4_8678_5157_188@2206x215.jpeg.m.jpg"></p><p>刷机流程</p><p>下图为“小米手机助手”，Recovery状态下连接电脑自动识别刷机模式，找到卡刷包(不解压)，点击刷机即可，等待ing……<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_42_diaoxie.png" alt="凋谢"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_2c2de955_8678_5164_521@988x700.jpeg.m.jpg"></p><p>小米手机助手</p><p>———————————————————————<br>7.〖工具箱类(仅电脑)〗：(以“搞机助手”为例)<br>点评：优点：图像化容易上手、功能较多、操作方便<br>缺点：没啥缺点(用的少，也不知道)<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_42_diaoxie.png" alt="凋谢"><br>操作：<br>——『Windows端』:</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_6971cd1f_8678_5174_411@1720x215.jpeg.m.jpg"></p><p>“搞机助手”-&gt;“恢复模式”</p><p>——『Android端』:</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_38951e1c_8678_5182_595@3667x263.jpeg.m.jpg"></p><p>“TWRP”-“高级”功能</p><p>如下图所示，在“高级”模式里，选择“ADB Sideload”</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_84d280d4_8682_0184_920@886x1722.jpeg.m.jpg"></p><p>“高级”-&gt;“ADB Sideload”</p><p>如图所示～勾选(✔)“清除Dalvik Cache”与“清除Cache”,滑动进入“Siedload模式”</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_359a7f7e_8682_0188_841@886x1781.jpeg.m.jpg"></p><p>“ADB Sideload”</p><p>图示:<br>该图为“搞机助手”内置图文说明，其实和本帖提到的方法原理一致，看个人喜好操作.</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_f05a57da_8678_5208_919@486x220.jpeg.m.jpg"></p><p>“搞机助手”内置指示</p><p>如下图:手机进Recovery模式并连接电脑，点击“选择卡刷包”-&gt;找到要刷入的卡刷包-&gt;点击“开始刷机”，开始卡刷，等待卡刷完毕ing…<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_57_dogehechi.png" alt="doge呵斥"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_281c9f4c_8678_5218_825@468x284.jpeg.m.jpg"></p><p>“搞机助手”-“Sideload模式”</p><p>———————————————————————<br>8.〖ADB〗:-&gt;这里以“Platform-Tools”为例<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_56_dogexiaoku.png" alt="doge笑哭"><br>点评：优点：真·无脑<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"><br>缺点：没有(经常用，不影响)<br>操作：<br>——『Android端』:</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_38951e1c_8678_5182_595@3667x263.jpeg.m.jpg"></p><p>“TWRP”-“高级”功能</p><p>如下图所示，在“高级”模式里，选择“ADB Sideload”</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_84d280d4_8682_0184_920@886x1722.jpeg.m.jpg"></p><p>“高级”-&gt;“ADB Sideload”</p><p>如图所示～勾选(✔)“清除Dalvik Cache”与“清除Cache”,滑动进入“Siedload模式”</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_359a7f7e_8682_0188_841@886x1781.jpeg.m.jpg"></p><p>“ADB Sideload”</p><p>——『Windows端』:  </p><p>①进CMD命令框：</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_44672cbd_8682_0191_385@2763x215.jpeg.m.jpg"></p><p>进cmd命令框</p><p>如下图所示，输入：“cmd”回车，即可开启cmd命令框，之后可以在“cmd命令框”里输入“adb”来检测adb是否成功激活.</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_f9212d12_8682_0194_568@1006x242.jpeg.m.jpg"></p><p>“cmd命令框”启动</p><p>②电脑开始进行“Siedload”模式卡刷(此时注意:TWRP已进入“Siedload”模式)</p><p><img src="https://image.coolapk.com/feed/2023/0417/16/8589893_842d5aef_8682_0199_69@487x151.jpeg.m.jpg"></p><p>——注:updata·zip:为你要卡刷的ROM包(.zip),请确保该“updata.zip所处路径与cmd命令框里的路径相同”-&gt;可输完“adb Sideload ”后直接把该“updata.zip”拖到命令框中.  </p><p>注:教学完毕-END<br>———————————————————————<br>———————————————————————<br>『刷机驱动』:<br>本人自己整合的，亲测可用<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><a href="https://www.123pan.com/s/p1r7Vv-PhHW3">[链接]驱动.zip官方版下载丨最新版下载丨绿色…</a></p><p>———————————————————————<br>『小米手机助手』:<br>适合新手，但不适合搞机党使用，毕竟刷完上锁🔒嘛，谁也不想再等待168(仅在售的机型)<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽">💦</p><p><a href="http://zhushou.xiaomi.com/">[链接]小米手机助手</a></p><p>———————————————————————<br>『Miflash』:<br>小米官方刷机工具，但仅只能刷官方的包，官改包请另外找工具刷入(ADB、工具箱)，刷机较为常规，适合新手试试水<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><a href="https://miuiver.com/miflash/">[链接]MiFlash 线刷工具下载合集 …</a></p><p>———————————————————————<br>『Platform-tools』:<br>Google发行的ADB工具，是我这种ADB工具狂热粉的常规工具<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰">，适合会指令的老哥们使用，也推荐小白尝试，可以锻炼记忆能力<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_64_shounuehuaji.png" alt="受虐滑稽"></p><p><a href="https://developer.android.google.cn/studio/releases/platform-tools?hl=zh-cn">[链接]SDK 平台工具版本说明  |…</a></p><p>———————————————————————<br>『搞机助手』:<br>一款热门的搞机工具，图像化的操作让手机调试也变得直观且方便操作，小白和大佬都适用<img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_65_coshuaji.png" alt="cos滑稽"><img src="http://static.coolapk.com/emoticons/v9/coolapk_emotion_41_meigui.png" alt="玫瑰"></p><p><a href="https://lsdy.top/gjzs">[链接]搞机助手-官网</a></p><p>———————————————————————<br>『第三方Recovery』:<br>懂得都懂，官方的REC被删减了功能，不太方便使用，用第三方Recovery可拓展手机REC模式的功能，但天玑请不要刷!天玑不要刷!天玑不要刷！风险很高<br>—TWRP</p><p><a href="https://twrp.me/">[链接]TeamWin - TWRP</a></p><p>— Orange fox(橙狐)</p><p><a href="https://orangefox.downlo/">[链接]https://orangefox.do...</a></p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> Apatch </tag>
            
            <tag> root </tag>
            
            <tag> Magisk </tag>
            
            <tag> KernelSU </tag>
            
            <tag> twrp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KernelSU</title>
      <link href="/2024/05/13/Kernel%20SU/"/>
      <url>/2024/05/13/Kernel%20SU/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><p>什么是KernelSU<br>  KernelSU是内核级的root方案（以下简称KSU），相较于传统的Magisk，具有更强的隐蔽性。<br>  支持修补(init_)boot.img获取root权限。这意味着KSU可以更为简单地获取root权限，同时修补(init_)boot.img的方式意味着可以使用第三方内核，比如潘多拉内核等。</p></li><li><p>本教程适合哪些人<br>  未root而想root的用户、已通过Magisk获取root权限而想转至KSU的用户、已通过刷入通用内核获取root权限而想转至修补(init_)boot.img模式的KSU用户。</p></li><li><p>KernelSU原理</p><ul><li>KernelSU(<code>GKI</code>)：使用<strong>通用内核镜像</strong>（GKI）替换掉设备原有的内核。</li><li>KernelSU(<code>LVM</code>)：使用<strong>可加载内核模块</strong>（LKM）的方式加载到设备内核中，不会替换掉设备原有的内核。向ramdisk分区添加可加载内核，其他安装过程和magisk安装方法一致。</li></ul><p>  #补充 &#x3D;&#x3D;内核版本5.0以上支持GKI模式，可以安装kernelSU（GKI）&#x3D;&#x3D;<br>  #补充&#x3D;&#x3D;内核版本5.10以上，软件版本0.9.0及以上，支持kernelSU(LKM)&#x3D;&#x3D;</p></li></ul><p>#注意 &#x3D;&#x3D;KernelSU 只支持内核版本5.x以上的手机&#x3D;&#x3D;<br>#补充 如果你的设备已root，请通过下载系统包的方式提取内核而不是直接从设备提取，因为<code>已root设备的内核已被修改。</code></p><p>两种模式共存：<br>    打开管理器后，你可以在首页看到设备当前运行的模式；注意 GKI 模式的优先级高于 LKM，如你你既使用 GKI 内核替换掉了原有的内核，又使用 LKM 的方式修补了 GKI 内核，那么 LKM 会被忽略，设备将永远以 GKI 的模式运行。</p><p><code>与 GKI 模式不同，LKM 模式会修改 ramdisk，因此在出厂 内核-Android 13 的设备上，它需要修补的是 init_boot分区而非 boot 分区；而 GKI 模式则永远是操作 boot 分区。</code></p><h3 id="GKI-模式​"><a href="#GKI-模式​" class="headerlink" title="GKI 模式​"></a>GKI 模式<a href="https://kernelsu.org/zh_CN/guide/installation.html#gki-mode">​</a></h3><p>GKI 模式会替换掉设备原有的内核，使用 KernelSU 提供的通用内核镜像。GKI 模式的优点是：</p><ol><li>通用型强，适用于大多数设备；比如三星开启了 KNOX 的设备，LKM 模式无法运作。还有一些冷门的魔改设备，也只能使用 GKI 模式；</li><li>不依赖官方固件即可使用；不需要等待官方固件更新，只要 KMI 一致，就可以使用；</li></ol><h3 id="LKM-模式​"><a href="#LKM-模式​" class="headerlink" title="LKM 模式​"></a>LKM 模式<a href="https://kernelsu.org/zh_CN/guide/installation.html#lkm-mode">​</a></h3><p>LKM 模式不会替换掉设备原有的内核，而是使用可加载内核模块的方式加载到设备内核中。LKM 模式的优点是：</p><ol><li>不会替换掉设备原有的内核；如果你对设备原有的内核有特殊需求，或者你希望在使用第三方内核的同时使用 KernelSU，可以使用 LKM 模式；</li><li>升级和 OTA 较为方便；升级 KernelSU 时，可以直接在管理器里面安装，无需再手动刷写；系统 OTA 后，可以直接安装到第二个槽位，也无需再手动刷写；</li><li>适用于一些特殊场景；比如使用临时 ROOT 权限也可以加载 LKM，由于不需要替换 boot 分区，因此不会触发 avb，不会使设备意外变砖；</li><li>LKM 可以被临时卸载；如果你临时想取消 root，可以卸载 LKM，这个过程不需要刷写分区，甚至也不用重启设备；如果你想再次 root，只需要重启设备即可；</li></ol><p>&#96;&#96;刷机千万条，数据第一条。在刷机之前强烈建议你进行数据备份，防止手机变砖后数据丢失！！！</p><p><code>提前开启USB调试模式 </code>备份官方包的boot.mg   init_boot.img文件<br>&#96;&#96;备好线刷包，变砖直接线刷</p><h1 id="一、LKM模式"><a href="#一、LKM模式" class="headerlink" title="一、LKM模式"></a>一、LKM模式</h1><h2 id="1-Kernel-SU刷入"><a href="#1-Kernel-SU刷入" class="headerlink" title="1.Kernel SU刷入"></a>1.Kernel SU刷入</h2><p>1、小米解锁 <strong>Bootloader</strong>：<a href="https://magiskcn.com/xiaomi-unlock">Xiaomi-unlock</a></p><p>2、下载系统包：<a href="https://magiskcn.com/rom">ROM下载 - Magisk中文网 (magiskcn.com)</a>（一定要下载和手机系统版本一致的系统包）</p><p>3、提取 <strong>boot.img</strong> ：<a href="https://magiskcn.com/payload-dumper-go-boot">payload-dumper-go-boot</a>（如果系统包有 <strong>boot.img</strong>，可以跳过此步骤）<br>#补充 <a href="https://dumper.pedroz.eu.org/">在线提取刷机包</a><br>#补充    <code>线刷包：解压后，在images文件夹找到(init_)boot.img</code><br>        <code>卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取(init_)boot.img</code></p><p>4、手机插电脑，文件传输模式，复制 <strong>(init_)boot.img</strong> 到手机 <strong>Download</strong> 目录</p><p>5、手机下载 <strong>KernslSU</strong> APP 安装</p><p>6、手机打开 <strong>KernslSU</strong> ，①：选择并修补一个文件 ②：选择 <strong>(init_)boot</strong>.img – ③：开始修补 – ④：修补完成（修补生成 <strong>KernslSU_(init_)boot-xxx.img</strong> 文件在 <strong>Download</strong> 目录）</p><p>#注意 如果你已通过KSU获取过root权限或修改过内核，请执行以下操作，否则跳过以下操作。<br>    因为设备的内核已被修改，因此在继续操作之前，需要刷回原厂boot。系统包解包后将boot.img移至和adb工具同一个文件夹。<br>    <code>有root权限，可kernel SU直接刷入原厂(init_)boot.img镜像,app选择直接安装，重启结束。</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot boot.img  #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash (init_)boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash (init_)boot boot.img</span><br></pre></td></tr></table></figure><p>7、打开“<strong>打开CMD命令行.bat</strong>”，输入下面的命令&#x3D;&#x3D;(注意需要adb、fastboot工具)&#x3D;&#x3D;<br>#补充 &#x3D;&#x3D;KernslSU.img 每次修补的名字都不一样，使用的时候请更改为boot.img，避免bug.&#x3D;&#x3D;<br>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配对应分区。<br>    根据你的机型是否有init_boot分区而选择对应的命令，如果有，flash后面为init_boot，如果没有，则为boot。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">临时启动：fastboot boot 修补文件名 #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash (init_)boot 修补文件名</span><br><span class="line">多设备：fastboot -s 设备码  flash (init_)boot 修补文件名</span><br><span class="line"></span><br><span class="line">fastboot flash (init_)boot_ab 修补文件名</span><br></pre></td></tr></table></figure><p>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p><p>8、输出下面这三行代码，就是成功刷入了。再使用指令 <code>fastboot reboot</code> 重启手机。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Sending &#x27;boot&#x27; (196608 KB) OKAY [ 4.697s]</span><br><span class="line">Writing &#x27;boot&#x27;             OKAY [ 0.512s]</span><br><span class="line">Finished. Total time: 5.235s</span><br></pre></td></tr></table></figure><p>9、手机开机 打开KernslSU，提示工作中，刷入成功。<br>#提示 :<br>    如果刷入 KernelSU.img** 不能开机，可以把前面提取的 <strong>(init_)boot.img</strong> 通过 <strong>fastboot</strong> 刷回去，恢复原 <strong>(init_)boot</strong>，一般都能正常开机！<br>    <strong>(init_)boot.img</strong> 保留一份在电脑，避免出问题了可以自救下！</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot boot.img #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash (init_)boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash (init_)boot boot.img</span><br><span class="line"></span><br><span class="line">fastboot flash (init_)boot_ab 修补文件名</span><br></pre></td></tr></table></figure><p>#补充 注意刷入的(init_)boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配对应分区。<br>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p><h2 id="2-保ROOT升级-LKM"><a href="#2-保ROOT升级-LKM" class="headerlink" title="2.保ROOT升级-LKM"></a>2.保ROOT升级-LKM</h2><p>1、下载要升级版本的全量包<br>    可通过系统升级界面下载，然后暂停，后续通过下载助手继续下载。<br>#补充 &#x3D;&#x3D;注意下载完成后的刷机包，复制一份，避免升级失败，还得重新下载。&#x3D;&#x3D;</p><p>2、解压刷机包，找到boot.img，拷贝到手机。<br>#注意   <code>官方boot.img保存好，后续救砖和KernslSU升级会用到。</code><br>#补充    <code>线刷包：解压后，在images文件夹找到boot.img</code><br>        <code>卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取boot.img</code></p><p>3、手机打开 <strong>KernslSU</strong> ，①：选择并修补一个文件 ②：选择 <strong>boot</strong>.img – ③：输入超级密钥，开始修补 – ④：修补完成（修补生成 <strong>KernslSU-xxx.img</strong> 文件在 <strong>Download</strong> 目录）<br>#注意 <code>修补后的boot.img保存好，后续救砖和KernslSU升级也会用到。</code></p><p>4、系统升级界面选择导入本地安装包，等待验证，结束后暂不要重启</p><p>5、手机打开 <strong>KernslSU</strong>，①安装到未使用的槽位</p><p>6、重启，手机开机 打开 <strong>KernslSU</strong> ，工作中，成功。</p><p>#补充 root掉了的话，第3步保存的修补后的boot文件，可直接刷入。这时需注意刷入的分区</p><h1 id="二、GKI模式"><a href="#二、GKI模式" class="headerlink" title="二、GKI模式"></a>二、GKI模式</h1><h2 id="1-Kernel-SU刷入-1"><a href="#1-Kernel-SU刷入-1" class="headerlink" title="1.Kernel SU刷入"></a>1.Kernel SU刷入</h2><p>1、小米解锁 <strong>Bootloader</strong>：<a href="https://magiskcn.com/xiaomi-unlock">Xiaomi-unlock</a></p><p>2、下载系统包：<a href="https://magiskcn.com/rom">ROM下载 - Magisk中文网 (magiskcn.com)</a>（一定要下载和手机系统版本一致的系统线刷包，&#x3D;&#x3D;砖了直接线刷&#x3D;&#x3D;）</p><p>3、提取 <strong>boot.img</strong> ：<a href="https://magiskcn.com/payload-dumper-go-boot">payload-dumper-go-boot</a>（如果系统包有 <strong>boot.img</strong>，可以跳过此步骤）<br>#补充    <code>线刷包：解压后，在images文件夹找到boot.img</code><br>        <code>卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取boot.img</code></p><p>4、手机插电脑，文件传输模式，复制 <strong>boot.img</strong> 到手机 <strong>Download</strong> 目录</p><p>5、手机下载 <strong>KernslSU</strong> APP 安装</p><p>6、 下载对应机型的第三方内核包，如潘多拉内核（&#x3D;&#x3D;目前新版（0101以上）潘多拉已不支持内核级Root,避免开挂&#x3D;&#x3D;）。</p><ul><li>您可以从 <a href="https://github.com/tiann/KernelSU/releases">GitHub Release</a> 下载 AnyKernel3 的刷机包，如果你不知道下载哪一个，请仔细查阅上述文档中关于 <a href="https://kernelsu.org/zh_CN/guide/installation.html#kmi">KMI</a> 和 <a href="https://kernelsu.org/zh_CN/guide/installation.html#security-patch-level">安全补丁级别</a>的描述；下载错误的刷机包很可能导致无法开机，请注意备份。</li><li>您可以从 <a href="https://github.com/tiann/KernelSU/releases">GitHub Release</a> 下载 boot.img, 请注意您应该使用正确版本的 boot.img。如果您不知道应该下载哪一个文件，请仔细阅读本文档中关于 <a href="https://kernelsu.org/zh_CN/guide/installation.html#kmi">KMI</a> 和 <a href="https://kernelsu.org/zh_CN/guide/installation.html#security-patch-level">安全补丁级别</a>的描述。</li></ul><p>7、AK3：手机打开<strong>Kernelflash</strong>，点击当前插槽–&gt;查看–&gt;刷入–&gt;AK3压缩包，选择第三方内核包，刷入</p><p>7、boot：手机进入 <strong>Bootloader</strong> 模式，再插入电脑。打开“<strong>打开CMD命令行.bat</strong>”，输入下面的命令<br>#补充 &#x3D;&#x3D;KernslSU.img 每次修补的名字都不一样，使用的时候请更改为boot.img，避免bug.&#x3D;&#x3D;<br>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配对应分区。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot 文件名 #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash boot 文件名</span><br><span class="line">多设备：fastboot -s 设备码  flash boot 文件名</span><br><span class="line"></span><br><span class="line">fastboot flash boot_ab 文件名</span><br></pre></td></tr></table></figure><p>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p><p>8、boot：输出下面这三行代码，就是成功刷入了。再使用指令 <code>fastboot reboot</code> 重启手机。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Sending &#x27;boot&#x27; (196608 KB) OKAY [ 4.697s]</span><br><span class="line">Writing &#x27;boot&#x27;             OKAY [ 0.512s]</span><br><span class="line">Finished. Total time: 5.235s</span><br></pre></td></tr></table></figure><p>9、手机开机 打开KernslSU，提示工作中，刷入成功。</p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> 刷机 </tag>
            
            <tag> root </tag>
            
            <tag> KernelSU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apatch</title>
      <link href="/2024/05/12/Apatch/"/>
      <url>/2024/05/12/Apatch/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><p>什么是Apatch<br>  Apatch是内核级的root方案，相较于传统的Magisk，具有更强的隐蔽性。<br>  支持修补boot.img获取root权限。这意味着Apatch可以更为简单地获取root权限，同时修补boot.img的方式意味着可以使用第三方内核，比如潘多拉内核等。</p></li><li><p>本教程适合哪些人<br>  未root而想root的用户、已通过Magisk获取root权限而想转至Apatch的用户、已通过刷入通用内 核获取root权限而想转至修补boot.img模式的KSU用户。</p></li><li><p>Apatch原理</p><ul><li>Apatch替换官方boot.img中GKI内核的kernel文件,然后再打包刷入boot分区</li></ul><p>  #补充 Apatch目前支持一些内核版本4.x的内核，但需要你去确认。</p></li></ul><p>&#96;&#96;所有手机的kernel文件一直在boot分区，所以apatch一直修补boot.img镜像。</p><p>#注意 &#x3D;&#x3D;Apatch 支持内核版本5.x以上的手机,4.x仅支持一部分，刷入前提前确认&#x3D;&#x3D;<br>#补充 如果你的设备已root，请通过下载系统包的方式提取内核而不是直接从设备提取，因为<code>已root设备的内核已被修改。</code></p><p><code>刷机千万条，数据第一条。在刷机之前强烈建议你进行数据备份，防止手机变砖后数据丢失！！！</code></p><p><code>提前开启USB调试模式 </code>备份官方包的boot.mg   init_boot.img文件<br>&#96;&#96;备好线刷包，变砖直接线刷</p><h1 id="一、Apatch刷入"><a href="#一、Apatch刷入" class="headerlink" title="一、Apatch刷入"></a>一、Apatch刷入</h1><h2 id="1-fastboot刷入"><a href="#1-fastboot刷入" class="headerlink" title="1. fastboot刷入"></a>1. fastboot刷入</h2><p>1、小米解锁 <strong>Bootloader</strong>：<a href="https://magiskcn.com/xiaomi-unlock">Xiaomi-unlock</a></p><p>2、下载系统包：<a href="https://magiskcn.com/rom">ROM下载 - Magisk中文网 (magiskcn.com)</a>（一定要下载和手机系统版本一致的系统包）</p><p>3、提取 <strong>boot.img</strong> ：<a href="https://magiskcn.com/payload-dumper-go-boot">payload-dumper-go-boot</a>（如果系统包有 <strong>boot.img</strong>，可以跳过此步骤）<br>#补充<a href="https://dumper.pedroz.eu.org/">在线提取boot、init_boot镜像</a><br>#补充    <code>线刷包：解压后，在images文件夹找到boot.img</code><br>        <code>卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取boot.img</code></p><p>4、手机插电脑，文件传输模式，复制 <strong>boot.img</strong> 到手机 <strong>Download</strong> 目录</p><p>5、手机下载 <strong>APatch</strong> APP 安装：<a href="https://apatch.app/apatch-download">APatch-download</a></p><ul><li><ul><li>有root权限，可kernel SU直接刷入原厂(init_)boot镜像,app选择修补并安装，重启结束。</li></ul></li></ul><p>6、手机打开 <strong>APatch</strong>，①：选择并修补一个文件 ②：选择 <strong>boot</strong>.img – ③：输入超级密钥，开始修补 – ④：修补完成（修补生成 <strong>apatch_patched-xxx.img</strong> 文件在 <strong>Download</strong> 目录）<br>#提示 <code>注意保存超级密钥</code>(字母+数字的组合方式)</p><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/8a8bb7cd343aa2a.jpg" alt="APatch安装教程插图" title="APatch安装教程插图"></p><p>7、电脑下载 <strong>adb-fastboot</strong>：<a href="https://mrzzoxo.lanzoui.com/b02plghuh">蓝奏盘</a>（解压出来）</p><p>8、手机打开 文件传输模式，打开 <strong>Download</strong> 目录，把 <strong>apatch.img</strong> 复制到电脑 <strong>adb-fastboot</strong> 目录</p><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/693a9fdd4c2fd07.png" alt="APatch安装教程插图1" title="APatch安装教程插图1"></p><p>9、手机进入 <strong>Bootloader</strong> 模式，再插入电脑。<br>（手机关机，电源键+音量下键，两个键长按）</p><p>#注意 &#96;&#96;如果你已获取过root权限或修改过内核，请执行以下操作，否则跳过以下操作。<br>    因为设备的内核已被修改，因此在继续操作之前，需要刷回原厂boot。系统包解包后将boot.img移至和adb工具同一个文件夹（注意是boot.img，即使是init_boot分区的手机也是boot.img）。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot boot.img  #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash boot boot.img</span><br></pre></td></tr></table></figure><p>10、打开“<strong>打开CMD命令行.bat</strong>”，输入下面的命令&#x3D;&#x3D;(注意需要adb、fastboot工具)&#x3D;&#x3D;<br>#补充 apatch.img 每次修补的名字都不一样，&#x3D;&#x3D;使用的时候请更改为(init_)boot.img，避免bug.&#x3D;&#x3D;<br>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配当前分区。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">临时启动：fastboot boot 修补文件名 #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash boot 修补文件名</span><br><span class="line">多设备：fastboot -s 设备码  flash boot 修补文件名</span><br><span class="line"></span><br><span class="line">fastboot flash boot_ab 修补文件名</span><br></pre></td></tr></table></figure><p>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p><p>11、输出下面这三行代码，就是成功刷入了。再使用指令 <code>fastboot reboot</code> 重启手机。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Sending &#x27;boot_b&#x27; (196608 KB) OKAY [ 4.697s]</span><br><span class="line">Writing &#x27;boot_b&#x27;             OKAY [ 0.512s]</span><br><span class="line">Finished. Total time: 5.235s</span><br></pre></td></tr></table></figure><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/9d607a663f3e9b0.png" alt="APatch安装教程插图3" title="APatch安装教程插图3"></p><p>12、手机开机 打开 <strong>APatch</strong> ，①：输入 超级密钥 – ②：安装 系统补丁 – ③：生效中😀 成功刷入</p><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/894f782a148b33a.jpg" alt="APatch安装教程插图4" title="APatch安装教程插图4"></p><hr><p>#提示 :<br>    如果刷入 <strong>apatch.img</strong> 不能开机，可以把前面提取的 <strong>boot.img</strong> 通过 <strong>fastboot</strong> 刷回去，恢复原 <strong>boot</strong>，一般都能正常开机！<br>    <strong>boot.img</strong> 保留一份在电脑，避免出问题了可以自救下！</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot boot.img #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash boot boot.img</span><br><span class="line"></span><br><span class="line">fastboot flash boot_ab 修补文件名</span><br></pre></td></tr></table></figure><p>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配对应分区。<br>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p><h2 id="2-rec刷入"><a href="#2-rec刷入" class="headerlink" title="2. rec刷入"></a>2. rec刷入</h2><p>1、小米解锁 <strong>Bootloader</strong>：<a href="https://magiskcn.com/xiaomi-unlock">Xiaomi-unlock</a></p><p>2、下载机子本身版本的线刷包（卡刷包），去小米官方论坛下载就行。小米官方地址：<a href="https://magiskcn.com/rom">ROM下载 - Magisk中文网 (magiskcn.com)</a></p><p>3、解压线刷包，找到boot.img，拷贝到手机。<br>#注意   <code>官方boot.img保存好，后续救砖和apatch升级会用到。</code><br>#补充    <code>线刷包：解压后，在images文件夹找到boot.img</code><br>        <code>卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取boot.img</code></p><p>4、手机安装Apatch软件，下载地址：<a href="https://github.com/bmax121/APatch/" title="https://github.com/bmax121/APatch/">查看链接</a>。  </p><p>5、手机打开 <strong>APatch</strong>，①：选择并修补一个文件 ②：选择 <strong>boot</strong>.img – ③：输入超级密钥，开始修补 – ④：修补完成（修补生成 <strong>apatch_patched-xxx.img</strong> 文件在 <strong>Download</strong> 目录）  、<br>#提示 <code>注意保存超级密钥</code><br><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/8a8bb7cd343aa2a.jpg" alt="APatch安装教程插图" title="APatch安装教程插图"></p><p>6、刷入第三方TWRP。TWRP下载地址：<a href="https://www.123pan.com/s/oyZzVv-Dxzjh.html" title="https://www.123pan.com/s/oyZzVv-Dxzjh.html">查看链接</a>，把手机关机，长按开机键和音量减键，进入FASTBOOT模式，通过一键刷入工具一键刷入即可。如果不会操作可以看这位大佬写的教程。<a href="https://www.coolapk.com/feed/45561323?shareKey=YWNkZjEwYTYxYzg0NjVmYjlkY2U~&shareUid=2374840&shareFrom=com.coolapk.market_14.0.3" title="https://www.coolapk.com/feed/45561323?shareKey=YWNkZjEwYTYxYzg0NjVmYjlkY2U~&amp;shareUid=2374840&amp;shareFrom=com.coolapk.market_14.0.3">查看链接</a>  </p><p>7、使用recovery刷入修补后的boot.img文件到boot分区。<br>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code><br>#补充 <code>apatch修补后的boot文件,最好改成boot.img，避免奇怪bug</code></p><h2 id="8、手机开机-打开-APatch-，①：输入-超级密钥-–-②：安装-系统补丁-–-③：生效中😀-成功刷入"><a href="#8、手机开机-打开-APatch-，①：输入-超级密钥-–-②：安装-系统补丁-–-③：生效中😀-成功刷入" class="headerlink" title="8、手机开机 打开 APatch ，①：输入 超级密钥 – ②：安装 系统补丁 – ③：生效中😀 成功刷入***"></a>8、手机开机 打开 <strong>APatch</strong> ，①：输入 超级密钥 – ②：安装 系统补丁 – ③：生效中😀 成功刷入<br><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/894f782a148b33a.jpg" alt="APatch安装教程插图4" title="APatch安装教程插图4"><br>***</h2><p>#提示 :<br>    如果刷入 <strong>apatch.img</strong> 不能开机，可以把前面提取的 <strong>boot.img</strong> 通过 <strong>fastboot</strong> 或REC刷回去，恢复原 <strong>boot</strong>，一般都能正常开机！<br>    <strong>boot.img</strong> 保留一份在电脑，避免出问题了可以自救下！</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">单设备：fastboot flash boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash boot boot.img</span><br><span class="line"></span><br><span class="line">fastboot flash boot_ab 修补文件名</span><br></pre></td></tr></table></figure><p>#补充 REC注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配对应分区。<br>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p><h1 id="二、保ROOT升级"><a href="#二、保ROOT升级" class="headerlink" title="二、保ROOT升级"></a>二、保ROOT升级</h1><p>1、下载要升级版本的全量包<br>    可通过系统升级界面下载，然后暂停，后续通过下载助手继续下载。<br>#补充 &#x3D;&#x3D;注意下载完成后的刷机包，复制一份，避免升级失败，还得重新下载。&#x3D;&#x3D;</p><p>2、解压刷机包，找到boot.img，拷贝到手机。<br>#注意   <code>官方boot.img保存好，后续救砖和apatch升级会用到。</code><br>#补充    <code>线刷包：解压后，在images文件夹找到boot.img</code><br>        <code>卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取boot.img</code></p><p>3、手机打开 <strong>APatch</strong>，①：选择并修补一个文件 ②：选择 <strong>boot</strong>.img – ③：输入超级密钥，开始修补 – ④：修补完成（修补生成 <strong>apatch_patched-xxx.img</strong> 文件在 <strong>Download</strong> 目录）<br>#注意 <code>修补后的boot.img保存好，后续救砖和apatch升级也会用到。</code></p><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/8a8bb7cd343aa2a.jpg" alt="APatch安装教程插图" title="APatch安装教程插图"></p><p>4、系统升级界面导入本地安装包，等待验证，结束后暂不要重启、<br>5、手机打开 <strong>APatch</strong>，①直接安装到未使用的槽位<br>#补充 潘多拉内核系统OTA，可能回提示not patch，还原内核（新系统boot），再直接安装，系统重启进入后，再刷潘多拉。</p><p>6、重启，手机开机 打开 <strong>APatch</strong> ，①：输入 超级密钥 – ②：生效中😀 成功刷入<br><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/8a8bb7cd343aa2a.jpg" alt="APatch安装教程插图" title="APatch安装教程插图"></p><p>#补充 root掉了的话，第3步保存的修补后的boot文件，可直接刷入。</p><h1 id="三、第三方内核"><a href="#三、第三方内核" class="headerlink" title="三、第三方内核"></a>三、第三方内核</h1><pre><code>第三方内核通过修改(init_)boot镜像中的kernel文件，而apatch和kernelsu(gki)也是修改kernel文件，会导致第三方内核刷入后，丢失root。magisk、kernelsu(lkm)通过修补(init_)boot镜像中的ramdisk文件，实现root获取，刷入第三方内核，从而不会丢失root。</code></pre><h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><ul><li>1、使用Horizon Kernel flasher或者Kernel flasher 将需要的内核刷入系统，此时不重启系统，然后使用Scene或者搞机助手或者其他玩机软件等，提取此时的BOOT文件。</li></ul><p>#注意 内核包是通过AK3压缩包刷入的<br><img src="https://cf.dreamf.fun/image/202405122221023.png" alt="image.png"></p><ul><li><p>2、使用Apatch修补提取出来的这个boot文件。在download文件得到Apatch开头的已修补的boot文件。  </p></li><li><p>3、此时重启手机，进入recovery，然后刷入这个已修补的boot镜像文件。  </p></li><li><p>4、开机，享用第三方内核+Apatch即可。</p></li></ul><p>#注意 此方法通用，但某些内核可以不行，如果无法开机，请准备好线刷包救砖。小白慎试，小白慎试，小白慎试！</p><h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><p>1、小米解锁 <strong>Bootloader</strong>：<a href="https://magiskcn.com/xiaomi-unlock">Xiaomi-unlock</a><br>2、下载系统包：<a href="https://magiskcn.com/rom">ROM下载 - Magisk中文网 (magiskcn.com)</a>（一定要下载和手机系统版本一致的系统包）<br>3、提取 <strong>boot.img</strong> ：<a href="https://magiskcn.com/payload-dumper-go-boot">payload-dumper-go-boot</a>（如果系统包有 <strong>boot.img</strong>，可以跳过此步骤）<br>#补充<a href="https://dumper.pedroz.eu.org/">在线提取boot、init_boot镜像</a><br>#补充    <code>线刷包：解压后，在images文件夹找到boot.img</code><br>        <code>卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取boot.img</code></p><p>4、安装<a href="https://install.appcenter.ms/users/vvb2060/apps/magisk/distribution_groups/public">magisk-alpha</a><br>5、手机打开 <strong>Magisk</strong>，①：选择并修补一个文件 ②：选择 <strong>boot</strong>.img – ③：输入超级密钥，开始修补 – ④：修补完成（修补生成 <strong>magisk_patched-xxx.img</strong> 文件在 <strong>Download</strong> 目录）<br>#注意 <code>修补后的(init_)boot.img保存好，后续救砖和magisk升级也会用到。</code><br>6、通过kernelflash 、scene、爱玩机刷入修补后的(init_)boot.img，重启，alpha获取到root权限</p><p>7.使用Horizon Kernel flasher或者Kernel flasher 将需要的内核刷入系统，重启，然后使用Scene或者搞机助手或者其他玩机软件等，提取此时的BOOT文件。  </p><p>#注意 内核包是通过AK3压缩包刷入的<br><img src="https://cf.dreamf.fun/image/202405122221023.png" alt="image.png"></p><p>8、使用Apatch修补提取出来的这个boot文件。在download文件得到Apatch开头的已修补的boot文件。<br>9、  通过kernelflash 、scene、爱玩机刷入修补后的(init_)boot.img，重启</p><p>10、重启，手机开机 打开 <strong>APatch</strong> ，①：输入 超级密钥 – ②：生效中😀 成功刷入<br>#补充 MT管理器删除data&#x2F;adb&#x2F;目录下的文件，防止检测到magisk残留。<br><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/8a8bb7cd343aa2a.jpg" alt="APatch安装教程插图" title="APatch安装教程插图"></p><h1 id="四、System分区读写（不依赖任何模块）"><a href="#四、System分区读写（不依赖任何模块）" class="headerlink" title="四、System分区读写（不依赖任何模块）"></a>四、System分区读写（不依赖任何模块）</h1><p>前提条件：至少刷入一个模块，且 <code>/data/adb/ap/modules.img</code> 文件存在</p><hr><p>1、已刷入 APatch</p><p>2、手机下载安装：<a href="https://mt2.cn/download/">MT管理器</a> ，并授权 ROOT 权限</p><p>3、打开目录<code>/data/adb/modules</code>创建 <code>.rw</code> 文件夹（前面有个点 . ）</p><p><img src="https://kernelsu.com/wp-content/uploads/2024/05/eccbc87e4b5ce2f.jpg" alt="System分区读写（不依赖任何模块）插图" title="System分区读写（不依赖任何模块）插图"><br>4、打开<code>.rw</code>目录，创建 <code>system</code>文件夹</p><p><img src="https://kernelsu.com/wp-content/uploads/2024/05/a87ff679a2f3e71.jpg" alt="System分区读写（不依赖任何模块）插图1" title="System分区读写（不依赖任何模块）插图1"><br>5、打开<code>system</code>目录，创建<code>upperdir</code>与<code>workdir</code>两个文件夹。创建完毕 重启手机。</p><p><img src="https://kernelsu.com/wp-content/uploads/2024/05/e4da3b7fbbce234.jpg" alt="System分区读写（不依赖任何模块）插图2" title="System分区读写（不依赖任何模块）插图2"><br>6、测试分区读写，System分区读写成功</p><p><img src="https://kernelsu.com/wp-content/uploads/2024/05/85cc80d763e8f0f.jpg" alt="System分区读写（不依赖任何模块）插图3" title="System分区读写（不依赖任何模块）插图3"></p><hr><p>此方案不会直接修改system分区的文件，而是通过OverlayFS的方式修改。<br>如果改坏了或者想还原，直接删除<code>.rw</code> 文件夹再重启手机即可恢复。</p>]]></content>
      
      
      <categories>
          
          <category> Root </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> Apatch </tag>
            
            <tag> 刷机 </tag>
            
            <tag> root </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOOT</title>
      <link href="/2024/05/12/BOOT/"/>
      <url>/2024/05/12/BOOT/</url>
      
        <content type="html"><![CDATA[<h1 id="一、BOOT历史"><a href="#一、BOOT历史" class="headerlink" title="一、BOOT历史"></a>一、BOOT历史</h1><h2 id="1-1-init-boot分区简介"><a href="#1-1-init-boot分区简介" class="headerlink" title="1.1 (init_)boot分区简介"></a>1.1 (init_)boot分区简介</h2><ul><li><p>boot.img：</p><ul><li>内含：<ul><li>Ramdisk                                   # 内核-安卓13.5.x及以后移到init_boot分区</li><li>GKI内核(Kernel)                        </li><li>或<code>Recover(安卓11之前)</code>          # 安卓11以后recovery分区移到boot分区里面</li></ul></li><li>adb命令：<code>bootloader模式</code><ul><li>&#96;&#96;手机关机，电源键+音量下键</li><li>&#96;&#96;adb reboot bootloader</li></ul></li></ul></li><li><p>init_boot.img:</p><ul><li>分区内涵：<ul><li>Ramdisk                                    # 内核-安卓13.5.x及以后，归入进来</li></ul></li><li>adb命令：<code>fastbootd模式</code><ul><li>&#96;&#96;adb reboot fastboot</li></ul></li></ul></li></ul><p>#补充 <code>内核版本-安卓13.5.x.x后把Ramdisk放入init_boot分区</code><br>#补充 Ramdisk:存放设备启动时所需的临时文件，帮助设备加载系统。</p><ul><li>出场内核-安卓11及以上的手机都采用VAB分区，boot分区分为boot_a、boot_b分区</li></ul><p>#补充 </p><p><img src="https://cf.dreamf.fun/image/202405122117171.png" alt="image.png"></p><p><img src="https://cf.dreamf.fun/image/202405191646565.png" alt="image.png"></p><h2 id="1-2-Magisk、KSU、Apatch修补原理"><a href="#1-2-Magisk、KSU、Apatch修补原理" class="headerlink" title="1.2 Magisk、KSU、Apatch修补原理"></a>1.2 Magisk、KSU、Apatch修补原理</h2><p>Magisk、KSU、Apatch修补(init_)boot.img：</p><ol><li><p>Magisk</p><ul><li>Magisk修补Ramdisk</li></ul><p> #补充 在ramdisk中注入bootstrap进程，它会在启动时初始化magisk环境，随后拉起init进程，手机启动<br> #补充 内核版本-安卓13.5.x.x以上的机型，ramdisk移到init_boot分区。</p></li><li><p>KSU</p><ul><li>KernelSU(<code>GKI</code>)：使用<strong>通用内核镜像</strong>（GKI）替换掉设备原有的内核。</li><li>KernelSU(<code>LVM</code>)：使用<strong>可加载内核模块</strong>（LKM）的方式加载到设备内核中，不会替换掉设备原有的内核。向ramdisk分区添加可加载内核，其他安装过程和magisk安装方法一致。</li><li>#补充 内核版本-安卓13.5.x.x以上的机型，ramdisk移到init_boot分区。</li></ul><p> #补充 &#x3D;&#x3D;内核版本5.0以上支持GKI模式，可以安装kernelSU（GKI）&#x3D;&#x3D;<br> #补充&#x3D;&#x3D;内核版本5.10以上，软件版本0.9.0及以上，支持kernelSU(LKM)&#x3D;&#x3D;</p></li><li><p>Apatch</p><ul><li>Apatch替换官方boot.img中GKI内核的kernel文件,然后再打包刷入boot分区</li></ul><p> #补充&#x3D;&#x3D;Apatch 支持内核版本5.x以上的手机,4.x仅支持一部分，刷入前提前确认</p></li></ol><p>#注意 KernelSU（GKI）：一直操作boot分区<br>        Apatch：所有手机kernel内核一直在boot分区，所以apatch修补boot分区<br>        KernelSU（LKM）：操作ramdisk，和Magisk一样的安装方式，但实现机制不同。</p><h1 id="二、BOOT提取"><a href="#二、BOOT提取" class="headerlink" title="二、BOOT提取"></a>二、BOOT提取</h1><h2 id="1-1-刷机包"><a href="#1-1-刷机包" class="headerlink" title="## 1.1 刷机包"></a>## 1.1 刷机包</h2><ul><li>解压线刷包，找到(init_)boot.img，拷贝保存。<br>  #注意   <code>官方(init_)boot.img保存好，最高优先级</code><br>  #补充    线刷包：解压后，在images文件夹找到(init_)boot.img<br>  卡刷包：解压后，找到payload.bin，通过[[payload提取boot.img|Payload]]或MT管理器获取boot.img或init_boot,img</li></ul><h2 id="1-2-SCENE-需ROOT"><a href="#1-2-SCENE-需ROOT" class="headerlink" title="1.2 SCENE(需ROOT)"></a>1.2 SCENE(需ROOT)</h2><ul><li>备份还原–&gt;备份分区镜像，选择要备份的槽位对应的<code>boot</code>分区或<code>init_boot</code>分区<br><img src="https://cf.dreamf.fun/image/202405122226974.png" alt="image.png"></li></ul><h2 id="1-3-爱玩机工具箱-需ROOT"><a href="#1-3-爱玩机工具箱-需ROOT" class="headerlink" title="1.3 爱玩机工具箱(需ROOT)"></a>1.3 爱玩机工具箱(需ROOT)</h2><ul><li>导航–&gt;刷机工具箱–&gt;镜像分区管理，选择要备份的槽位对应的<code>boot</code>分区或<code>init_boot</code>分区<br><img src="https://cf.dreamf.fun/image/202405122228835.png" alt="image.png"></li></ul><h2 id="1-4-kernel-flash-需ROOT"><a href="#1-4-kernel-flash-需ROOT" class="headerlink" title="1.4 kernel flash(需ROOT)"></a>1.4 kernel flash(需ROOT)</h2><ul><li>查看当前要备份的槽位对应的<code>boot</code>分区或<code>init_boot</code>分区，点击备份。</li></ul><h2 id="1-5-TWRP"><a href="#1-5-TWRP" class="headerlink" title="1.5 TWRP"></a>1.5 TWRP</h2><ul><li>重启到REC界面，备份当前槽位对应的<code>boot</code>分区或<code>init_boot</code>分区</li><li>修改备份文件名为<code>boot</code>.img或<code>init_boot</code>.img</li></ul><h2 id="1-6-在线提取"><a href="#1-6-在线提取" class="headerlink" title="1.6 在线提取"></a>1.6 在线提取</h2><p><a href="https://dumper.pedroz.eu.org/">在线提取boot、init_boot镜像</a></p><h1 id="三、BOOT刷入"><a href="#三、BOOT刷入" class="headerlink" title="三、BOOT刷入"></a>三、BOOT刷入</h1><h2 id="2-1-搞机助手-ADB工具"><a href="#2-1-搞机助手-ADB工具" class="headerlink" title="2.1 搞机助手&amp;ADB工具"></a>2.1 搞机助手&amp;ADB工具</h2><ul><li>修改后的boot或init_boot文件,改为init_boot.img或boot.img，不然<code>可能</code>提示错误<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">init_boot分区：      fastboot flash init_boot    boot文件名</span><br><span class="line">boot分区：           fastboot flash boot    boot文件名</span><br><span class="line"></span><br><span class="line">其他命令：</span><br><span class="line">fastboot flash boot_ab   boot文件名     #该命令需要在fastbootd模式下</span><br><span class="line">fastboot flash boot_a    boot文件名</span><br><span class="line">fastboot flash boot_b    boot文件名</span><br></pre></td></tr></table></figure></li></ul><p>#补充 电脑fastboot刷入时会自动识别当前分区，刷入其他分区需自行输入命令。</p><h2 id="2-2-TWRP"><a href="#2-2-TWRP" class="headerlink" title="2.2 TWRP"></a>2.2 TWRP</h2><ul><li>修改后的boot或init_boot文件,改为init_boot.img或boot.img，不然<code>可能</code>提示错误<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">init_boot分区：    fastboot flash init_boot    init_boot文件名</span><br><span class="line">boot分区：         fastboot flash boot      boot文件名</span><br><span class="line"></span><br><span class="line">其他命令：</span><br><span class="line">fastboot flash boot_ab   boot文件名     #该命令需要在fastbootd模式下</span><br><span class="line">fastboot flash boot_a    boot文件名</span><br><span class="line">fastboot flash boot_b    boot文件名</span><br></pre></td></tr></table></figure></li></ul><p>#补充 电脑fastboot刷入时会自动识别当前分区，刷入其他分区需自行输入命令。</p><h2 id="2-3-kernel-flasher-需ROOT"><a href="#2-3-kernel-flasher-需ROOT" class="headerlink" title="2.3 kernel flasher(需ROOT)"></a>2.3 kernel flasher(需ROOT)</h2><ul><li>获取root：修改后的boot或init_boot文件直接刷入要刷入的槽位的分区</li></ul><p>#补充 区分刷入的A&#x2F;B槽位</p><h2 id="2-4-SCENE-需ROOT"><a href="#2-4-SCENE-需ROOT" class="headerlink" title="2.4 SCENE(需ROOT)"></a>2.4 SCENE(需ROOT)</h2><ul><li>备份还原–&gt;刷入分区镜像，选择boot或init_boot文件，刷入对应的boot或init_boot分区</li></ul><p>#补充 区分刷入的A&#x2F;B槽位</p><h2 id="2-5-爱玩机工具箱-需ROOT"><a href="#2-5-爱玩机工具箱-需ROOT" class="headerlink" title="2.5 爱玩机工具箱(需ROOT)"></a>2.5 爱玩机工具箱(需ROOT)</h2><ul><li>导航–&gt;刷机工具箱–&gt;镜像分区管理，选择boot或init_boot文件,刷入对应的boot或init_boot分区</li></ul><p>#补充 区分刷入的A&#x2F;B槽位</p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apatch </tag>
            
            <tag> root </tag>
            
            <tag> boot </tag>
            
            <tag> Magisk </tag>
            
            <tag> KernelSU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apatch、KernelSU、面具互转</title>
      <link href="/2024/05/12/Magisk&amp;Apatch&amp;KSU%E4%BA%92%E8%BD%AC/"/>
      <url>/2024/05/12/Magisk&amp;Apatch&amp;KSU%E4%BA%92%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Apatch转Magisk"><a href="#一、Apatch转Magisk" class="headerlink" title="一、Apatch转Magisk"></a>一、Apatch转Magisk</h1><ul><li>提取官方的(init_)boot.img</li><li>使用面具修补(init_)boot.img</li><li>下载kernelflasher刷官方的(init_)boot.img，再刷修补后的(init_)boot.img</li><li>重启</li></ul><h1 id="二、Magisk转Apatch"><a href="#二、Magisk转Apatch" class="headerlink" title="二、Magisk转Apatch"></a>二、Magisk转Apatch</h1><p>1、 卸载Magisk模块，从官方包提取官方的boot和init_boot<br>2、手机打开 <strong>APatch</strong>，①：选择并修补一个文件 ②：选择 <strong>boot</strong>.img – ③：输入超级密钥，开始修补 – ④：修补完成（修补生成 <strong>apatch_patched-xxx.img</strong> 文件在 <strong>Download</strong> 目录）<br>#提示 <code>注意保存超级密钥</code></p><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/8a8bb7cd343aa2a.jpg" alt="APatch安装教程插图" title="APatch安装教程插图"></p><p>3、手机打开 文件传输模式，打开 <strong>Download</strong> 目录，把 <strong>apatch.img</strong> 复制到电脑 <strong>adb-fastboot</strong> 目录</p><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/693a9fdd4c2fd07.png" alt="APatch安装教程插图1" title="APatch安装教程插图1"></p><p>4、Magisk–&gt;卸载–&gt;完全卸载，然后会自动重启<br>5、打开“<strong>打开CMD命令行.bat</strong>”，输入下面的命令<br>#补充 apatch.img 每次修补的名字都不一样，使用的时候请更改为boot.img，避免bug.。<br>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配当前分区。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">临时启动：fastboot boot 修补文件名 #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash boot 修补文件名</span><br><span class="line">多设备：fastboot -s 设备码  flash boot 修补文件名</span><br><span class="line"></span><br><span class="line">fastboot flash boot_ab 修补文件名</span><br></pre></td></tr></table></figure><p>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p><p>6、输出下面这三行代码，就是成功刷入了。再使用指令 <code>fastboot reboot</code> 重启手机。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Sending &#x27;boot_b&#x27; (196608 KB) OKAY [ 4.697s]</span><br><span class="line">Writing &#x27;boot_b&#x27;             OKAY [ 0.512s]</span><br><span class="line">Finished. Total time: 5.235s</span><br></pre></td></tr></table></figure><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/9d607a663f3e9b0.png" alt="APatch安装教程插图3" title="APatch安装教程插图3"></p><p>7、手机开机 打开 <strong>APatch</strong> ，①：输入 超级密钥 – ②：安装 系统补丁 – ③：生效中😀 成功刷入</p><p><img src="https://cdn.apatch.app/wp-content/uploads/2024/04/894f782a148b33a.jpg" alt="APatch安装教程插图4" title="APatch安装教程插图4"></p><hr><p>#提示 :<br>    如果刷入 <strong>apatch.img</strong> 不能开机，可以把前面提取的 <strong>boot.img</strong> 通过 <strong>fastboot</strong> 刷回去，恢复原 <strong>boot</strong>，一般都能正常开机！<br>    <strong>boot.img</strong> 保留一份在电脑，避免出问题了可以自救下！</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot boot.img #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash boot boot.img</span><br><span class="line"></span><br><span class="line">fastboot flash boot_ab 修补文件名</span><br></pre></td></tr></table></figure><p>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配对应分区。<br>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> Apatch </tag>
            
            <tag> 刷机 </tag>
            
            <tag> Magisk </tag>
            
            <tag> KernelSU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Magisk</title>
      <link href="/2024/05/12/Magisk/"/>
      <url>/2024/05/12/Magisk/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li><p>什么是Magisk</p></li><li><p>Magisk的原理</p><ul><li>Magisk修补<code>Ramdisk</code>文件中的init进程</li></ul><p>#补充 在ramdisk中注入bootstrap进程，它会在启动时初始化magisk环境，随后拉起init进程，手机启动<br>#补充 内核版本-安卓13.5.x.x以上的机型，ramdisk移到init_boot分区。</p></li></ul><p>&#96;&#96;刷机千万条，数据第一条。在刷机之前强烈建议你进行数据备份，防止手机变砖后数据丢失！！！</p><p><code>提前开启USB调试模式 </code>备份官方包的boot.mg   init_boot.img文件<br>&#96;&#96;备好线刷包，变砖直接线刷</p><p>1、小米解锁 <strong>Bootloader</strong>：<a href="https://magiskcn.com/xiaomi-unlock">Xiaomi-unlock</a>  </p><p>2、下载系统包：<a href="https://magiskcn.com/rom">rom</a>（一定要下载和手机系统版本一致的系统包）</p><p>3、提取 <strong>boot.img</strong> ：<a href="https://magiskcn.com/payload-dumper-go-boot">payload-dumper-go-boot</a>（如果系统包有 <strong>boot.img</strong>，可以跳过此步骤）<br>#补充 <a href="https://dumper.pedroz.eu.org/">在线提取刷机包</a><br>#补充    <code>线刷包：解压后，在images文件夹找到(init_)boot.img</code><br>        &#96;卡刷包：解压后，找到payload.bin，通过上述工具或MT管理器获取(init_)boot.img</p><p>4、手机插电脑，文件传输模式，复制 <strong>boot.img</strong> 到手机 <strong>Download</strong> 目录</p><p>5、手机下载 <strong>Magisk</strong> APP 安装：<a href="https://magiskcn.com/magisk-download">Magisk-download</a></p><p>6、打开Magisk，①：安装 – ②：选择(init_)boot.img– ③：开始修补文件 – ④：修补完成（修补生成 magisk_patched-xxx.img 文件在 Download 目录）</p><p><img src="https://cdn.magiskcn.com/wp-content/uploads/2024/01/19bfce39a8275b1.jpg" alt="Magisk安装教程插图" title="Magisk安装教程插图"></p><p>7、电脑下载 <strong>adb-fastboot</strong>：<a href="https://mrzzoxo.lanzoui.com/b02plghuh">蓝奏盘</a>（解压出来）</p><p>8、手机插电脑，打开 文件传输 模式，打开 <strong>Download</strong> 目录，把 <strong>magisk.img</strong> 复制到电脑 <strong>adb-fastboot</strong> 目录</p><p><img src="https://cdn.magiskcn.com/wp-content/uploads/2024/03/0e84138dbf0fa5c.png" alt="Magisk安装教程插图1" title="Magisk安装教程插图1"></p><p>9、区分两种分区不同的进入方式。</p><ul><li>boot分区：手机进入 <code>Bootloader</code> 模式，再插入电脑<ul><li>&#96;&#96;adb reboot bootloader</li><li>&#96;&#96;手机关机，电源键+音量下键</li></ul></li><li>init_boot分区：手机进入 <code>Fastbootd</code> 模式<ul><li>&#96;&#96;adb reboot fastboot</li></ul></li></ul><p>#注意 &#96;&#96;如果你已获取过root权限或修改过内核，请执行以下操作，否则跳过以下操作。<br>    因为设备的内核已被修改，因此在继续操作之前，需要刷回原厂boot。系统包解包后将boot.img移至和adb工具同一个文件夹（注意是boot.img，即使是init_boot分区的手机也是boot.img）。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot boot.img  #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash (init_)boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash (init_)boot boot.img</span><br></pre></td></tr></table></figure><p>10、打开“<strong>打开CMD命令行.bat</strong>”，输入下面的命令<br>magisk.img每次修补的名字都不一样，使用的时候请更改为(init_)boot.img，避免bug。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">临时启动：fastboot boot 修补文件名 #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash (init_)boot 修补文件名</span><br><span class="line">多设备：fastboot -s 设备码  flash (init_)boot 修补文件名</span><br><span class="line"></span><br><span class="line">fastboot flash (init_)boot_ab 修补文件名 #该命令可能需在fastbootd模式下执行</span><br></pre></td></tr></table></figure><p>11、显示下面这三行代码，就是成功刷入了。再使用指令 <code>fastboot reboot</code> 重启手机。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Sending &#x27;boot_b&#x27; (196608 KB) OKAY [ 4.697s]</span><br><span class="line">Writing &#x27;boot_b&#x27;             OKAY [ 0.512s]</span><br><span class="line">Finished. Total time: 5.235s</span><br></pre></td></tr></table></figure><p><img src="https://cdn.magiskcn.com/wp-content/uploads/2024/01/6d3259ecbbccbd9.png" alt="Magisk安装教程插图3" title="Magisk安装教程插图3"></p><p>12、重启手机（开机有震动基本没问题了）耐心等手机开机。（显示Magisk的版本，就是刷好了的）</p><p><img src="https://cdn.magiskcn.com/wp-content/uploads/2024/01/808eac2afd92a6a.jpg" alt="Magisk安装教程插图4" title="Magisk安装教程插图4"></p><p>#提示 :<br>    如果刷入 <strong>magisk.img</strong> 不能开机，可以把前面提取的 <strong>(init_)boot.img</strong> 通过 <strong>fastboot</strong> 刷回去，恢复原 <strong>(init_)boot.img</strong>，一般都能正常开机！<br>    <strong>(init_)boot.img</strong> 保留一份在电脑，避免出问题了可以自救下！</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">临时启动：fastboot boot boot.img #测试img是否可用，手机正常重启，说明boot可安全刷入</span><br><span class="line"></span><br><span class="line">单设备：fastboot flash (init_)boot boot.img</span><br><span class="line">多设备：fastboot -s 设备码  flash (init_)boot boot.img</span><br><span class="line"></span><br><span class="line">fastboot flash (init_)boot_ab 修补文件名  #该命令可能需在fastbootd模式下执行</span><br></pre></td></tr></table></figure><p>#补充 注意刷入的boot分区,<code>a</code>或<code>b</code>,电脑ADB刷入不需要在意分区问题，会自动匹配对应分区。<br>#补充 注意使用adb时，单设备和多设备命令不一样。[[..&#x2F;..&#x2F;adb超级教程#为命令指定目标设备|详情参考]]</p>]]></content>
      
      
      <categories>
          
          <category> Root </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> 刷机 </tag>
            
            <tag> root </tag>
            
            <tag> Magisk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Recovery</title>
      <link href="/2024/05/12/Recovery/"/>
      <url>/2024/05/12/Recovery/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>刷机第一步：<code>开启手机的USB调试设备</code></p><p>出场安卓11手机基本都采用VAB分区，VAB分区机型没有Recovery分区，它被整合到了boot分区里。</p><h1 id="1-独立recovery分区"><a href="#1-独立recovery分区" class="headerlink" title="1. 独立recovery分区"></a>1. 独立recovery分区</h1><p>出厂安卓11以下的机型采用AB分区，有独立的rec分区，但个别特殊安卓11机型也有rec分区。</p><ul><li>独立rec分区<br>  fastboot flash recovery recovery.img</li></ul><h1 id="2-无独立recovery分区"><a href="#2-无独立recovery分区" class="headerlink" title="2. 无独立recovery分区"></a>2. 无独立recovery分区</h1><p>出厂安卓11的机型为VAB分区，recovery分区被合并到boot分区里面，但个别安卓11机型有独立的recovery分区。</p><ul><li><p>临时刷入。<br>  fastboot boot recovery.img             # 刷入后会自动重启到rec界面<br>  twrp中再刷入当前recovery镜像</p></li><li><p>永久刷入。<br>  fastboot flash boot recovery.img</p></li></ul><p>#补充 fastboot boot recovery.img</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">由于vab架构把rec分区放到了boot分区里面，现在刷rec都会顶掉面具。也有很多大佬做了一键刷入的脚本。我就咨询了一点原理，说是把boot和rec解包，两个镜像解包之后都会有两个文件夹，其中一个是ramdisk，然后把rec的ramdisk给放到boot这边，把boot里的ramdisk替换掉，然后再进行打包刷入即可。</span><br><span class="line">本文的方法只适用于“vab分区，且没有独立rec分区”的手机，并不是所有手机都适用此方法。如，不需要二次刷root，也不需要在twrp里面再次固化一遍twrp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安卓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> root </tag>
            
            <tag> Magisk </tag>
            
            <tag> Reccovery </tag>
            
            <tag> TWRP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hosts配置</title>
      <link href="/2024/05/09/hosts%E6%96%87%E4%BB%B6/"/>
      <url>/2024/05/09/hosts%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="本地hosts文件修改。"><a href="#本地hosts文件修改。" class="headerlink" title="本地hosts文件修改。"></a>本地hosts文件修改。</h1><ul><li>github域名被墙，可通过修改本地hosts文件，添加GitHub的域名和IP映射，实现GitHub的访问。</li></ul><p>#补充 GitHub访问失败，IP失效时，可通过[[域名查询#2. 域名解析网站|域名解析网站]]再次寻找相应的IP地址</p><pre><code class="md"># GitHub Start 140.82.113.3      github.com140.82.114.20     gist.github.com151.101.184.133    assets-cdn.github.com151.101.184.133    raw.githubusercontent.com151.101.184.133    gist.githubusercontent.com151.101.184.133    cloud.githubusercontent.com151.101.184.133    camo.githubusercontent.com151.101.184.133    avatars0.githubusercontent.com199.232.68.133     avatars0.githubusercontent.com199.232.28.133     avatars1.githubusercontent.com151.101.184.133    avatars1.githubusercontent.com151.101.184.133    avatars2.githubusercontent.com199.232.28.133     avatars2.githubusercontent.com151.101.184.133    avatars3.githubusercontent.com199.232.68.133     avatars3.githubusercontent.com151.101.184.133    avatars4.githubusercontent.com199.232.68.133     avatars4.githubusercontent.com151.101.184.133    avatars5.githubusercontent.com199.232.68.133     avatars5.githubusercontent.com151.101.184.133    avatars6.githubusercontent.com199.232.68.133     avatars6.githubusercontent.com151.101.184.133    avatars7.githubusercontent.com199.232.68.133     avatars7.githubusercontent.com151.101.184.133    avatars8.githubusercontent.com199.232.68.133     avatars8.githubusercontent.com# GitHub End</code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hosts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>obsidian图床设置</title>
      <link href="/2024/05/09/obsidian%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%A1%88/"/>
      <url>/2024/05/09/obsidian%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="文章简介"><a href="#文章简介" class="headerlink" title="文章简介"></a>文章简介</h1><p>该方案通过github库做存储空间，[[obsidian第三方插件#image auto upload|image auto upload plugin]]插件提供粘贴图片的自动上传服务，Picgo配合该插件提供图片上传到github,cloudflare通过自定义域名绑定github库提供CDN加速服务，实现图片预览</p><h1 id="一、-github设置"><a href="#一、-github设置" class="headerlink" title="一、 github设置"></a>一、 github设置</h1><h2 id="1-本地-网络-hosts文件-hosts-文件修改。"><a href="#1-本地-网络-hosts文件-hosts-文件修改。" class="headerlink" title="1. 本地[[..&#x2F;网络&#x2F;hosts文件|hosts]]文件修改。"></a>1. 本地[[..&#x2F;网络&#x2F;hosts文件|hosts]]文件修改。</h2><ul><li>github域名被墙，可通过修改本地[[..&#x2F;网络&#x2F;hosts文件|hosts文件]]，添加GitHub的域名和IP映射，实现GitHub的访问。</li></ul><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># GitHub Start </span></span><br><span class="line">140.82.113.3      github.com</span><br><span class="line">140.82.114.20     gist.github.com</span><br><span class="line"></span><br><span class="line">151.101.184.133    assets-cdn.github.com</span><br><span class="line">151.101.184.133    raw.githubusercontent.com</span><br><span class="line">151.101.184.133    gist.githubusercontent.com</span><br><span class="line">151.101.184.133    cloud.githubusercontent.com</span><br><span class="line">151.101.184.133    camo.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars0.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars0.githubusercontent.com</span><br><span class="line">199.232.28.133     avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars2.githubusercontent.com</span><br><span class="line">199.232.28.133     avatars2.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars3.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars3.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars4.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars4.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars5.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars5.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars6.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars6.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars7.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars7.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars8.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars8.githubusercontent.com</span><br><span class="line"></span><br><span class="line"><span class="section"># GitHub End</span></span><br></pre></td></tr></table></figure><h2 id="2-Public仓库建立"><a href="#2-Public仓库建立" class="headerlink" title="2. Public仓库建立"></a>2. Public仓库建立</h2><ul><li>点击 git 主页左上角的 <code>new</code> 创建 <code>New repository</code><br>  仓库信息设置 <code>Public</code> 因为后面通过客户端访问算是外部访问，因此无法访问 <code>Private</code> ，这样的话图片传上来之后只能存储不能显示。所以要设置为 <code>Public</code><br>  <img src="https://cf.dreamf.fun/image/202405092118369.png" alt="image.png"></li></ul><h2 id="3-创建token"><a href="#3-创建token" class="headerlink" title="3. 创建token"></a>3. 创建token</h2><ul><li>点击右上角头像，然后进入设置<code>Developer settings</code>，点击进入创建 token</li></ul><p>#补充 token选择classic</p><p><img src="https://cf.dreamf.fun/image/202405092124264.png" alt="image.png"></p><ul><li><p>勾选复选框 repo ，选择链接存在时间，Expiration（过期时间）为 No expiration（永久），接着到页面底部 <code>Generate token</code> 就完成token的创建。<br><img src="https://cf.dreamf.fun/image/202405092138180.png" alt="image.png"></p></li><li><p>记录生成的字符 token，这个<code> token 只出现一次</code>，所以要保存<br><img src="https://cf.dreamf.fun/image/202405092127448.png" alt="image.png"></p></li></ul><h1 id="二、Cloudflare设置"><a href="#二、Cloudflare设置" class="headerlink" title="二、Cloudflare设置"></a>二、Cloudflare设置</h1><h2 id="1-无域名"><a href="#1-无域名" class="headerlink" title="1.无域名"></a>1.无域名</h2><ul><li><p><code>进入Workers和Pages概述界面</code><br> 在Cloudflare主页，点击左侧<code>Workers和Pages</code>——&gt;<code>概述</code>菜单<br> <img src="https://cf.dreamf.fun/image/202405092157626.png" alt="image.png"></p></li><li><p><code>连接Github项目</code><br>  首先，点击右上角<code>创建应用程序</code>，跳转到创建应用程序页面，并切换到<code>Pages</code>界面：<br>  <img src="https://cf.dreamf.fun/image/202405092158547.png" alt="image.png"></p></li><li><p>点击<code>连接到Git</code>按钮<br>  在弹出界面中选择<code>Github</code>，并点击<code>连接Github</code>按钮，Cloudflare会自动引导你到Github授权页面，如果没有登录Github，则会先到登录界面。</p></li><li><p>选择项目部署方式<br>  选择<code>Only Select repositories</code>，并选择上面fork好的项目，然后点击<code>Install &amp; Authorize</code>按钮，确认完成授权和开始安装<br>  <img src="https://cf.dreamf.fun/image/202405092201539.png" alt="image.png"></p></li><li><p>Github可能会要求你输入账号密码，以确认上面的授权。输入你的Github密码并<code>Confirm</code>即可</p></li><li><p><code>项目部署</code><br>  确认授权后，会从Github自动跳回到Cloudflare中，继续开始后续的部署设置。<br>  选中上面授权好的Github项目，点击<code>开始设置</code><br>  <img src="https://cf.dreamf.fun/image/202405092207830.png" alt="image.png"></p></li><li><p>项目名称：自定义域名名称（想一个自己喜欢的域名名称）<br>  生产分支建议保持默认的<code>main</code>，其他的不要动，拉到最后，点击<code>保存并部署</code>，等待Pages自动部署项目。<br>  <img src="https://cf.dreamf.fun/image/202405092210552.png" alt="image.png"></p></li><li><p><code>部署成功</code><br>  cloudflare自动分配了一个默认的域名（根据上一步输入的项目名称决定的）<br>  <img src="https://cf.dreamf.fun/image/202405092212907.png" alt="image.png"></p></li></ul><p>#补充 记得保存自动分配的域名</p><h2 id="2-1-自己域名"><a href="#2-1-自己域名" class="headerlink" title="2.1 自己域名"></a>2.1 自己域名</h2><h1 id="三、Picgo"><a href="#三、Picgo" class="headerlink" title="三、Picgo"></a>三、Picgo</h1><ul><li>仓库名：[github用户名]&#x2F;[第一步新建的仓库名称]</li><li>分支：默认master，从2020.10.01开始，github的默认分支名变更为main</li><li>设定token：github创建的token</li><li>指定存储路径：可填可不填，如果填写了，图片就会存储在image文件夹下</li><li>设定自定义域名：cloudflare分配的域名。<br><img src="https://cf.dreamf.fun/image/202405092220779.png" alt="image.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Picgo </tag>
            
            <tag> Obsidian </tag>
            
            <tag> cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>obsidian备份</title>
      <link href="/2024/05/08/obsidian%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/"/>
      <url>/2024/05/08/obsidian%E5%A4%87%E4%BB%BD%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="一、阿里云OSS存储"><a href="#一、阿里云OSS存储" class="headerlink" title="一、阿里云OSS存储"></a>一、阿里云OSS存储</h1><h2 id="1-1-建立对象存储桶"><a href="#1-1-建立对象存储桶" class="headerlink" title="1.1 建立对象存储桶"></a>1.1 建立对象存储桶</h2><ul><li><p>首先需要在阿里云官网购买 OSS 服务。我购买的是<code>标准存储</code>.<br><img src="https://cf.dreamf.fun/image/202405091710408.png" alt="image.png"></p></li><li><p>创建 bucket.<br>  名称任取，未来会在 Remotely Save 用到，地域选择离自己最近的地方，存储类型选择<code>标准存储</code>，读写权限切记要选择<code>私有</code>，其他保持默认。创建完成后，记录下这个 bucket 的 <code>Endpoint，即 bucket 概览内的外网访问、ECS 的经典网络访问（内网）</code>。<br>  <img src="https://cf.dreamf.fun//image/202405091713312.png"></p></li></ul><h2 id="1-2-设置跨域访问。"><a href="#1-2-设置跨域访问。" class="headerlink" title="1.2 设置跨域访问。"></a>1.2 设置跨域访问。</h2><ul><li>数据安全——跨域设置：<br>  创建一个新的规则，来源分三行写下：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">app://obsidian.md</span><br><span class="line">capacitor://localhost</span><br><span class="line">http://localhost</span><br></pre></td></tr></table></figure></li><li>允许 Methods 里勾上全部5个选项，在允许 Headers 内填写一个 * 号，然后点击确定。</li><li>暴露Headers设置。<br>  暴露 Headers：设置为ETag.</li></ul><p><img src="https://cf.dreamf.fun/image/202405091732244.png" alt="image.png"></p><h2 id="1-3-管理-AccessKey。"><a href="#1-3-管理-AccessKey。" class="headerlink" title="1.3 管理 AccessKey。"></a>1.3 管理 AccessKey。</h2><ul><li>阿里云后台右上角头像，点击 AccessKey 管理，然后在弹出窗口中选择 使用子用户 AccessKey，创建一个用户。登录名称和显示名称可以自取</li><li>在访问方式里勾上 Open API 调用访问，这一步用来获取 <code>AccessKey ID</code> 和 <code>AccessKey Secret</code>。</li></ul><p>#补充 <code>创建完成后会显示一遍这两个信息，且仅会显示一次，切记保存好。</code></p><p><img src="https://cf.dreamf.fun/image/202405091722340.png" alt="image.png"></p><h2 id="1-4-Bucket授权策略"><a href="#1-4-Bucket授权策略" class="headerlink" title="1.4 Bucket授权策略"></a>1.4 Bucket授权策略</h2><ul><li><p>权限管理——Bucket 授权策略<br><img src="https://cf.dreamf.fun/image/202405091739306.png" alt="image.png"></p></li><li><p>点击“新增授权”，在弹出页面选定子账号，授权操作目前选了“读&#x2F;写”，可能还是需要“完全控制”<br><img src="https://cf.dreamf.fun/image/202405091740200.png" alt="image.png"></p></li></ul><p>#补充 <a href="https://forum-zh.obsidian.md/t/topic/5362">阿里云详情参考</a><br>#补充 <a href="https://forum-zh.obsidian.md/t/topic/16860">腾讯云配置参考</a></p><h1 id="二、CF存储桶R2"><a href="#二、CF存储桶R2" class="headerlink" title="二、CF存储桶R2"></a>二、CF存储桶R2</h1><p><a href="https://www.163.com/dy/article/J2VPL6MV0552NMWZ.html">详细介绍</a><br><img src="https://cf.dreamf.fun/image/202406062248942.png" alt="image.png"></p><h1 id="三、Obsidian"><a href="#三、Obsidian" class="headerlink" title="三、Obsidian"></a>三、Obsidian</h1><h2 id="2-1-obsidian第三方插件-remotely-save-remotely-save"><a href="#2-1-obsidian第三方插件-remotely-save-remotely-save" class="headerlink" title="2.1 [[obsidian第三方插件#remotely save|remotely save]]"></a>2.1 [[obsidian第三方插件#remotely save|remotely save]]</h2><p>打开 Remotely Save 插件，在 Choose service 处选择 S3 or compatible，在下方的5个框框填入对应信息：</p><ul><li>Endpoint：外网访问（<code>oss-cn-城市.aliyuncs.com</code>）</li><li>Region ：ECS 的经典网络访问（<code>oss-cn-城市</code>）</li><li>AccessKeyID&amp;SecretAccessKey 对应刚刚创建完用户的生成的两个值</li><li>BucketName 对应阿里云 OSS 内的 bucket 名字</li></ul><p><img src="https://cf.dreamf.fun/image/202405091749991.png" alt="image.png"></p><ul><li>点击侧边栏的 Remotely Save 或在命令面板执行 Remotely Save: start sync，即可开始第一次同步。</li></ul><p>第一次同步会把所有笔记保存到 OSS，但是不包括 .obsidian 文件夹的内容，意味着不会同步插件、主题和代码片段。<br>#补充 可以通过插件设置，同步.obsidian文件夹，实现插件同步</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Picgo </tag>
            
            <tag> cloudflare </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hosts配置丢失</title>
      <link href="/2024/05/05/hosts%E9%85%8D%E7%BD%AE%E4%B8%A2%E5%A4%B1/"/>
      <url>/2024/05/05/hosts%E9%85%8D%E7%BD%AE%E4%B8%A2%E5%A4%B1/</url>
      
        <content type="html"><![CDATA[<ol><li>win+s 打开搜索框，命令提示符使用管理员身份运行</li><li>复制下面这条命令,一行<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for /f %P in (&#x27;dir %windir%\WinSxS\hosts /b /s&#x27;) do copy %P %windir%\System32\drivers\etc &amp; echo %P &amp; [Notepad++] %P</span><br></pre></td></tr></table></figure></li><li>如果hosts文件丢失，将会创建，否则将覆盖，输入【a】，然后按下回车键</li></ol><p>#补充 hosts文件目录：C:\Windows\System32\drivers\etc】</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hosts </tag>
            
            <tag> Windows </tag>
            
            <tag> CMD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名查询</title>
      <link href="/2024/05/05/%E5%9F%9F%E5%90%8D%E6%9F%A5%E8%AF%A2/"/>
      <url>/2024/05/05/%E5%9F%9F%E5%90%8D%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<ul><li>[[目录]]<ul><li>[[#1. CMD命令查询域名]]<ul><li>[[#1.1 ping命令]]</li><li>[[#1.2 tracert命令]]</li><li>[[#1.3 nslookup命令]]</li></ul></li><li>[[#2. 域名解析网站]]<ul><li>[[#2.1 ipaddresss]]</li></ul></li></ul></li></ul><h1 id="1-CMD命令查询域名"><a href="#1-CMD命令查询域名" class="headerlink" title="1. CMD命令查询域名"></a>1. CMD命令查询域名</h1><h2 id="1-1-ping命令"><a href="#1-1-ping命令" class="headerlink" title="1.1 ping命令"></a>1.1 ping命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ping www.baidu.com</span><br><span class="line"></span><br><span class="line">正在 Ping www.a.shifen.com [39.156.66.18] 具有 32 字节的数据:</span><br><span class="line">来自 39.156.66.18 的回复: 字节=32 时间=21ms TTL=53</span><br><span class="line">来自 39.156.66.18 的回复: 字节=32 时间=21ms TTL=53</span><br><span class="line">来自 39.156.66.18 的回复: 字节=32 时间=21ms TTL=53</span><br><span class="line">来自 39.156.66.18 的回复: 字节=32 时间=20ms TTL=53</span><br><span class="line"></span><br><span class="line">39.156.66.18 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 20ms，最长 = 21ms，平均 = 20ms</span><br></pre></td></tr></table></figure><h2 id="1-2-tracert命令"><a href="#1-2-tracert命令" class="headerlink" title="1.2 tracert命令"></a>1.2 tracert命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;tracert www.baidu.com</span><br><span class="line"></span><br><span class="line">通过最多 30 个跃点跟踪</span><br><span class="line">到 www.a.shifen.com [39.156.66.18] 的路由:</span><br><span class="line"></span><br><span class="line">  1     1 ms     1 ms     1 ms  192.168.1.1 [192.168.1.1]</span><br><span class="line">  2    20 ms     4 ms     4 ms  10.225.192.1 [10.225.192.1]</span><br><span class="line">  3     6 ms     6 ms     5 ms  111.5.74.33</span><br><span class="line">  4     *        9 ms     9 ms  221.183.48.249</span><br><span class="line">  5    19 ms    18 ms    18 ms  221.183.37.181</span><br><span class="line">  6     *        *        *     请求超时。</span><br><span class="line">  7    95 ms   119 ms   126 ms  39.156.27.1</span><br><span class="line">  8    20 ms    20 ms    20 ms  39.156.67.73</span><br><span class="line">  9     *        *        *     请求超时。</span><br><span class="line"> 10     *        *        *     请求超时。</span><br><span class="line"> 11     *        *        *     请求超时。</span><br><span class="line"> 12     *        *        *     请求超时。</span><br><span class="line"> 13    21 ms    21 ms    21 ms  39.156.66.18</span><br><span class="line"></span><br><span class="line">跟踪完成。</span><br></pre></td></tr></table></figure><h2 id="1-3-nslookup命令"><a href="#1-3-nslookup命令" class="headerlink" title="1.3 nslookup命令"></a>1.3 nslookup命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;nslookup www.baidu.com</span><br><span class="line">服务器:  UnKnown</span><br><span class="line">Address:  fe80::1</span><br><span class="line"></span><br><span class="line">非权威应答:</span><br><span class="line">名称:    www.a.shifen.com</span><br><span class="line">Addresses:  39.156.66.14</span><br><span class="line">          39.156.66.18</span><br><span class="line">Aliases:  www.baidu.com</span><br></pre></td></tr></table></figure><h1 id="2-域名解析网站"><a href="#2-域名解析网站" class="headerlink" title="2. 域名解析网站"></a>2. 域名解析网站</h1><h2 id="2-1-ipaddresss"><a href="#2-1-ipaddresss" class="headerlink" title="2.1 ipaddresss"></a>2.1 ipaddresss</h2><ul><li>通过<a href="https://www.ipaddress.com/">IPaddress</a>，输入github.com寻找最新的链接IP<br><img src="https://cf.dreamf.fun/image/202405051309481.png" alt="界面详情"></li></ul><h2 id="2-2-IP138"><a href="#2-2-IP138" class="headerlink" title="2.2 IP138"></a>2.2 IP138</h2><p><a href="https://site.ip138.com/">IP138查询网站</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMD </tag>
            
            <tag> 网络 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
